

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Jun 20 12:26:14 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43  0000                     
    44                           ; Version 2.05
    45                           ; Generated 20/12/2018 GMT
    46                           ; 
    47                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F46K22 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	idataCOMRAM
    80  0018C8                     __pidataCOMRAM:
    81                           	opt callstack 0
    82                           
    83                           ;initializer for _hoursD
    84  0018C8  02                 	db	2
    85                           
    86                           ;initializer for _hoursT
    87  0018C9  01                 	db	1
    88  0000                     _ANSELD	set	3899
    89  0000                     _ANSELB	set	3897
    90  0000                     _PORTDbits	set	3971
    91  0000                     _LATC	set	3979
    92  0000                     _PORTBbits	set	3969
    93  0000                     _INTCONbits	set	4082
    94  0000                     _RCONbits	set	4048
    95  0000                     _LATD	set	3980
    96  0000                     _TRISD	set	3989
    97  0000                     _LATB	set	3978
    98  0000                     _TRISB	set	3987
    99  0000                     _OSCCON	set	4051
   100  0000                     _LATDbits	set	3980
   101  0000                     _TRISDbits	set	3989
   102  0000                     _LATEbits	set	3981
   103  0000                     _TRISEbits	set	3990
   104  0000                     _TRISC	set	3988
   105                           
   106                           	psect	smallconst
   107  001000                     __psmallconst:
   108                           	opt callstack 0
   109  001000  00                 	db	0
   110  001001                     STR_1:
   111  001001  43                 	db	67	;'C'
   112  001002  61                 	db	97	;'a'
   113  001003  6E                 	db	110	;'n'
   114  001004  6E                 	db	110	;'n'
   115  001005  6F                 	db	111	;'o'
   116  001006  74                 	db	116	;'t'
   117  001007  20                 	db	32
   118  001008  73                 	db	115	;'s'
   119  001009  65                 	db	101	;'e'
   120  00100A  74                 	db	116	;'t'
   121  00100B  20                 	db	32
   122  00100C  74                 	db	116	;'t'
   123  00100D  69                 	db	105	;'i'
   124  00100E  6D                 	db	109	;'m'
   125  00100F  65                 	db	101	;'e'
   126  001010  00                 	db	0
   127  001011                     STR_2:
   128  001011  69                 	db	105	;'i'
   129  001012  6E                 	db	110	;'n'
   130  001013  20                 	db	32
   131  001014  62                 	db	98	;'b'
   132  001015  69                 	db	105	;'i'
   133  001016  6E                 	db	110	;'n'
   134  001017  61                 	db	97	;'a'
   135  001018  72                 	db	114	;'r'
   136  001019  79                 	db	121	;'y'
   137  00101A  20                 	db	32
   138  00101B  6D                 	db	109	;'m'
   139  00101C  6F                 	db	111	;'o'
   140  00101D  64                 	db	100	;'d'
   141  00101E  65                 	db	101	;'e'
   142  00101F  00                 	db	0
   143                           
   144                           ; #config settings
   145  001020  00                 	db	0	; dummy byte at the end
   146  0000                     
   147                           	psect	cinit
   148  00173A                     __pcinit:
   149                           	opt callstack 0
   150  00173A                     start_initialization:
   151                           	opt callstack 0
   152  00173A                     __initialization:
   153                           	opt callstack 0
   154                           
   155                           ; Initialize objects allocated to COMRAM (2 bytes)
   156                           ; load TBLPTR registers with __pidataCOMRAM
   157  00173A  0EC8               	movlw	low __pidataCOMRAM
   158  00173C  6EF6               	movwf	tblptrl,c
   159  00173E  0E18               	movlw	high __pidataCOMRAM
   160  001740  6EF7               	movwf	tblptrh,c
   161  001742  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   162  001744  6EF8               	movwf	tblptru,c
   163  001746  0009               	tblrd		*+	;fetch initializer
   164  001748  CFF5 F022          	movff	tablat,__pdataCOMRAM
   165  00174C  0009               	tblrd		*+	;fetch initializer
   166  00174E  CFF5 F023          	movff	tablat,__pdataCOMRAM+1
   167                           
   168                           ; Clear objects allocated to COMRAM (12 bytes)
   169  001752  EE00  F016         	lfsr	0,__pbssCOMRAM
   170  001756  0E0C               	movlw	12
   171  001758                     clear_0:
   172  001758  6AEE               	clrf	postinc0,c
   173  00175A  06E8               	decf	wreg,f,c
   174  00175C  E1FD               	bnz	clear_0
   175  00175E                     end_of_initialization:
   176                           	opt callstack 0
   177  00175E                     __end_of__initialization:
   178                           	opt callstack 0
   179  00175E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   180  001760  6EF8               	movwf	tblptru,c
   181  001762  0100               	movlb	0
   182  001764  EFA4  F00A         	goto	_main	;jump to C main() function
   183                           
   184                           	psect	bssCOMRAM
   185  000016                     __pbssCOMRAM:
   186                           	opt callstack 0
   187  000016                     _LCD_RS_flag:
   188                           	opt callstack 0
   189  000016                     	ds	2
   190  000018                     _mode:
   191                           	opt callstack 0
   192  000018                     	ds	1
   193  000019                     _RTC:
   194                           	opt callstack 0
   195  000019                     	ds	5
   196  00001E                     _secondsD:
   197                           	opt callstack 0
   198  00001E                     	ds	1
   199  00001F                     _secondsT:
   200                           	opt callstack 0
   201  00001F                     	ds	1
   202  000020                     _minutesD:
   203                           	opt callstack 0
   204  000020                     	ds	1
   205  000021                     _minutesT:
   206                           	opt callstack 0
   207  000021                     	ds	1
   208                           
   209                           	psect	dataCOMRAM
   210  000022                     __pdataCOMRAM:
   211                           	opt callstack 0
   212  000022                     _hoursD:
   213                           	opt callstack 0
   214  000022                     	ds	1
   215  000023                     _hoursT:
   216                           	opt callstack 0
   217  000023                     	ds	1
   218                           
   219                           	psect	cstackCOMRAM
   220  000001                     __pcstackCOMRAM:
   221                           	opt callstack 0
   222  000001                     ?___awmod:
   223                           	opt callstack 0
   224  000001                     lcd_write@c:
   225                           	opt callstack 0
   226  000001                     I2C_Wait@cnt:
   227                           	opt callstack 0
   228  000001                     Delay100Us@x:
   229                           	opt callstack 0
   230  000001                     ___awmod@dividend:
   231                           	opt callstack 0
   232                           
   233                           ; 2 bytes @ 0x0
   234  000001                     	ds	1
   235  000002                     ??_I2C_Write_B:
   236  000002                     lcd_putchar@s:
   237                           	opt callstack 0
   238  000002                     lcd_goto@pos:
   239                           	opt callstack 0
   240  000002                     I2C_Read_B@ack:
   241                           	opt callstack 0
   242  000002                     lcd_puts@s:
   243                           	opt callstack 0
   244                           
   245                           ; 2 bytes @ 0x1
   246  000002                     	ds	1
   247  000003                     printBinary@number:
   248                           	opt callstack 0
   249  000003                     I2C_Write_B@dta:
   250                           	opt callstack 0
   251  000003                     I2C_Read_B@cnt:
   252                           	opt callstack 0
   253  000003                     Delay100Us@i:
   254                           	opt callstack 0
   255  000003                     ___awmod@divisor:
   256                           	opt callstack 0
   257                           
   258                           ; 2 bytes @ 0x2
   259  000003                     	ds	1
   260  000004                     I2C_Write_B@cnt:
   261                           	opt callstack 0
   262  000004                     I2C_Read_B@dta:
   263                           	opt callstack 0
   264  000004                     _printBinary$509:
   265                           	opt callstack 0
   266                           
   267                           ; 2 bytes @ 0x3
   268  000004                     	ds	1
   269  000005                     I2C_Set_Address@func:
   270                           	opt callstack 0
   271  000005                     ___awmod@counter:
   272                           	opt callstack 0
   273  000005                     DelayMs@x:
   274                           	opt callstack 0
   275  000005                     I2C_Read_Block@p_dta:
   276                           	opt callstack 0
   277                           
   278                           ; 2 bytes @ 0x4
   279  000005                     	ds	1
   280  000006                     printBinary@i:
   281                           	opt callstack 0
   282  000006                     I2C_Set_Address@adr:
   283                           	opt callstack 0
   284  000006                     ___awmod@sign:
   285                           	opt callstack 0
   286                           
   287                           ; 1 bytes @ 0x5
   288  000006                     	ds	1
   289  000007                     ??_I2C_Read_Block:
   290  000007                     setTime@ptr:
   291                           	opt callstack 0
   292  000007                     DelayMs@i:
   293                           	opt callstack 0
   294                           
   295                           ; 2 bytes @ 0x6
   296  000007                     	ds	2
   297  000009                     ?_pressedButton:
   298                           	opt callstack 0
   299  000009                     setTime@i:
   300                           	opt callstack 0
   301  000009                     display@tmp:
   302                           	opt callstack 0
   303                           
   304                           ; 1 bytes @ 0x8
   305  000009                     	ds	2
   306  00000B                     I2C_Read_Block@i:
   307                           	opt callstack 0
   308  00000B                     readAndSet@pos:
   309                           	opt callstack 0
   310                           
   311                           ; 2 bytes @ 0xA
   312  00000B                     	ds	1
   313  00000C                     I2C_Read_Block@j:
   314                           	opt callstack 0
   315                           
   316                           ; 1 bytes @ 0xB
   317  00000C                     	ds	1
   318  00000D                     readAndSet@valueReg:
   319                           	opt callstack 0
   320                           
   321                           ; 2 bytes @ 0xC
   322  00000D                     	ds	2
   323  00000F                     readAndSet@max:
   324                           	opt callstack 0
   325                           
   326                           ; 2 bytes @ 0xE
   327  00000F                     	ds	2
   328  000011                     ??_readAndSet:
   329                           
   330                           ; 1 bytes @ 0x10
   331  000011                     	ds	1
   332  000012                     ??_clockSetup:
   333                           
   334                           ; 1 bytes @ 0x11
   335  000012                     	ds	2
   336  000014                     clockSetup@pos:
   337                           	opt callstack 0
   338                           
   339                           ; 2 bytes @ 0x13
   340  000014                     	ds	2
   341  000016                     
   342                           ; 1 bytes @ 0x15
   343 ;;
   344 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   345 ;;
   346 ;; *************** function _main *****************
   347 ;; Defined at:
   348 ;;		line 289 in file "yunimain.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   366 ;;Total ram usage:        0 bytes
   367 ;; Hardware stack levels required when called:    5
   368 ;; This function calls:
   369 ;;		_clockSetup
   370 ;;		_clockStop
   371 ;;		_display
   372 ;;		_getTime
   373 ;;		_init
   374 ;;		_pressedButton
   375 ;;		_setTime
   376 ;; This function is called by:
   377 ;;		Startup code after reset
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           	psect	text0
   382  001548                     __ptext0:
   383                           	opt callstack 0
   384  001548                     _main:
   385                           	opt callstack 26
   386                           
   387                           ;yunimain.c: 291:     }
   388                           
   389                           ;incstack = 0
   390  001548  ECB4  F00B         	call	_init	;wreg free
   391  00154C  EC36  F00B         	call	_setTime	;wreg free
   392  001550  0E00               	movlw	0
   393  001552  6E19               	movwf	_RTC,c
   394  001554  EC36  F00B         	call	_setTime	;wreg free
   395  001558                     l2067:
   396  001558  EC85  F00B         	call	_getTime	;wreg free
   397  00155C  ECDB  F008         	call	_display	;wreg free
   398  001560  D008               	goto	l2079
   399  001562                     l2071:
   400  001562  EC36  F00C         	call	_clockStop	;wreg free
   401  001566  D7F8               	goto	l2067
   402  001568                     l2073:
   403  001568  EC11  F008         	call	_clockSetup	;wreg free
   404  00156C  D7F5               	goto	l2067
   405  00156E                     l2075:
   406  00156E  1E18               	comf	_mode,f,c
   407  001570  D7F3               	goto	l2067
   408  001572                     l2079:
   409  001572  EC1E  F00A         	call	_pressedButton	;wreg free
   410                           
   411                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   412                           ; Switch size 1, requested type "simple"
   413                           ; Number of cases is 1, Range of values is 0 to 0
   414                           ; switch strategies available:
   415                           ; Name         Instructions Cycles
   416                           ; simple_byte            4     3 (average)
   417                           ;	Chosen strategy is simple_byte
   418  001576  500A               	movf	?_pressedButton+1,w,c
   419  001578  0A00               	xorlw	0	; case 0
   420  00157A  A4D8               	btfss	status,2,c
   421  00157C  D7ED               	goto	l2067
   422                           
   423                           ; Switch size 1, requested type "simple"
   424                           ; Number of cases is 3, Range of values is 0 to 2
   425                           ; switch strategies available:
   426                           ; Name         Instructions Cycles
   427                           ; simple_byte           10     6 (average)
   428                           ;	Chosen strategy is simple_byte
   429  00157E  5009               	movf	?_pressedButton,w,c
   430  001580  0A00               	xorlw	0	; case 0
   431  001582  B4D8               	btfsc	status,2,c
   432  001584  D7EE               	goto	l2071
   433  001586  0A01               	xorlw	1	; case 1
   434  001588  B4D8               	btfsc	status,2,c
   435  00158A  D7EE               	goto	l2073
   436  00158C  0A03               	xorlw	3	; case 2
   437  00158E  B4D8               	btfsc	status,2,c
   438  001590  D7EE               	goto	l2075
   439  001592  D7E2               	goto	l2067
   440  001594                     __end_of_main:
   441                           	opt callstack 0
   442                           
   443 ;; *************** function _init *****************
   444 ;; Defined at:
   445 ;;		line 76 in file "yunimain.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, status,2, status,0, cstack
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   463 ;;Total ram usage:        0 bytes
   464 ;; Hardware stack levels used:    1
   465 ;; Hardware stack levels required when called:    4
   466 ;; This function calls:
   467 ;;		_displayInit
   468 ;;		_rtcInit
   469 ;; This function is called by:
   470 ;;		_main
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           	psect	text1
   475  001768                     __ptext1:
   476                           	opt callstack 0
   477  001768                     _init:
   478                           	opt callstack 26
   479                           
   480                           ;yunimain.c: 77:     I2C_Set_Address(0,0);
   481                           
   482                           ;incstack = 0
   483  001768  50D3               	movf	4051,w,c	;volatile
   484  00176A  0B8F               	andlw	143
   485  00176C  0970               	iorlw	112
   486  00176E  6ED3               	movwf	4051,c	;volatile
   487                           
   488                           ;yunimain.c: 79:     I2C_Set_Address(0,1);
   489  001770  6893               	setf	3987,c	;volatile
   490                           
   491                           ;yunimain.c: 80:     I2C_Read_Block(5, &RTC.controlReg);
   492  001772  688A               	setf	3978,c	;volatile
   493                           
   494                           ;yunimain.c: 81:     I2C_Stop();
   495  001774  0E00               	movlw	0
   496  001776  010F               	movlb	15	; () banked
   497  001778  6F39               	movwf	57,b	;volatile
   498                           
   499                           ; BSR set to: 15
   500                           ;yunimain.c: 83: 
   501  00177A  0E00               	movlw	0
   502  00177C  6E95               	movwf	3989,c	;volatile
   503                           
   504                           ; BSR set to: 15
   505                           ;yunimain.c: 84: 
   506  00177E  0E00               	movlw	0
   507  001780  6E8C               	movwf	3980,c	;volatile
   508                           
   509                           ; BSR set to: 15
   510                           ;yunimain.c: 85: 
   511  001782  0E00               	movlw	0
   512  001784  6F3B               	movwf	59,b	;volatile
   513                           
   514                           ; BSR set to: 15
   515                           ;yunimain.c: 87: void setTime() {
   516  001786  8ED0               	bsf	4048,7,c	;volatile
   517                           
   518                           ; BSR set to: 15
   519                           ;yunimain.c: 88:     uint8_t i;
   520  001788  8CF2               	bsf	4082,6,c	;volatile
   521                           
   522                           ; BSR set to: 15
   523                           ;yunimain.c: 90:     I2C_Stop();
   524  00178A  EC58  F00C         	call	_displayInit	;wreg free
   525                           
   526                           ;yunimain.c: 91:     I2C_Set_Address(0,0);
   527  00178E  ECCA  F00B         	call	_rtcInit	;wreg free
   528  001792  0012               	return		;funcret
   529  001794                     __end_of_init:
   530                           	opt callstack 0
   531                           
   532 ;; *************** function _rtcInit *****************
   533 ;; Defined at:
   534 ;;		line 62 in file "yunimain.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, status,2, status,0
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; This function calls:
   555 ;;		Nothing
   556 ;; This function is called by:
   557 ;;		_init
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           	psect	text2
   562  001794                     __ptext2:
   563                           	opt callstack 0
   564  001794                     _rtcInit:
   565                           	opt callstack 29
   566                           
   567                           ;yunimain.c: 63:     ANSELD = 0;
   568                           
   569                           ;incstack = 0
   570  001794  9095               	bcf	3989,0,c	;volatile
   571                           
   572                           ;yunimain.c: 64: 
   573  001796  9295               	bcf	3989,1,c	;volatile
   574                           
   575                           ;yunimain.c: 66:     INTCONbits.GIEL = 1;
   576  001798  808C               	bsf	3980,0,c	;volatile
   577                           
   578                           ;yunimain.c: 67: 
   579  00179A  808C               	bsf	3980,0,c	;volatile
   580                           
   581                           ;yunimain.c: 69:     rtcInit();
   582  00179C  0E80               	movlw	128
   583  00179E  6E19               	movwf	_RTC,c
   584                           
   585                           ;yunimain.c: 70: }
   586  0017A0  0E00               	movlw	0
   587  0017A2  6E1A               	movwf	_RTC+1,c
   588                           
   589                           ;yunimain.c: 71: 
   590  0017A4  381F               	swapf	_secondsT,w,c
   591  0017A6  0BF0               	andlw	240
   592  0017A8  101E               	iorwf	_secondsD,w,c
   593  0017AA  6E1B               	movwf	_RTC+2,c
   594                           
   595                           ;yunimain.c: 72: 
   596  0017AC  3821               	swapf	_minutesT,w,c
   597  0017AE  0BF0               	andlw	240
   598  0017B0  1020               	iorwf	_minutesD,w,c
   599  0017B2  6E1C               	movwf	_RTC+3,c
   600                           
   601                           ;yunimain.c: 73: 
   602  0017B4  3823               	swapf	_hoursT,w,c
   603  0017B6  0BF0               	andlw	240
   604  0017B8  1022               	iorwf	_hoursD,w,c
   605  0017BA  6E1D               	movwf	_RTC+4,c
   606  0017BC  0012               	return		;funcret
   607  0017BE                     __end_of_rtcInit:
   608                           	opt callstack 0
   609                           
   610 ;; *************** function _displayInit *****************
   611 ;; Defined at:
   612 ;;		line 55 in file "yunimain.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, status,2, status,0, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;Total ram usage:        0 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; Hardware stack levels required when called:    3
   633 ;; This function calls:
   634 ;;		_lcd_init
   635 ;; This function is called by:
   636 ;;		_init
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           	psect	text3
   641  0018B0                     __ptext3:
   642                           	opt callstack 0
   643  0018B0                     _displayInit:
   644                           	opt callstack 26
   645                           
   646                           ;yunimain.c: 56: 
   647                           
   648                           ;incstack = 0
   649  0018B0  0E00               	movlw	0
   650  0018B2  6E94               	movwf	3988,c	;volatile
   651                           
   652                           ;yunimain.c: 57:     TRISB = 0b11111111;
   653  0018B4  9496               	bcf	3990,2,c	;volatile
   654                           
   655                           ;yunimain.c: 58:     LATB = 0xff;
   656  0018B6  848D               	bsf	3981,2,c	;volatile
   657                           
   658                           ;yunimain.c: 59:     ANSELB = 0;
   659  0018B8  EC4E  F009         	call	_lcd_init	;wreg free
   660  0018BC  0012               	return		;funcret
   661  0018BE                     __end_of_displayInit:
   662                           	opt callstack 0
   663                           
   664 ;; *************** function _lcd_init *****************
   665 ;; Defined at:
   666 ;;		line 142 in file "display.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;		None
   669 ;; Auto vars:     Size  Location     Type
   670 ;;		None
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;Total ram usage:        0 bytes
   685 ;; Hardware stack levels used:    1
   686 ;; Hardware stack levels required when called:    2
   687 ;; This function calls:
   688 ;;		_DelayMs
   689 ;;		_lcd_write
   690 ;; This function is called by:
   691 ;;		_displayInit
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           	psect	text4
   696  00129C                     __ptext4:
   697                           	opt callstack 0
   698  00129C                     _lcd_init:
   699                           	opt callstack 26
   700                           
   701                           ;display.c: 144:  {if(0 == 1) LATC |= 0x40; else LATC &= 0x0F;};
   702                           
   703                           ;incstack = 0
   704  00129C  0E0F               	movlw	15
   705  00129E  168B               	andwf	3979,f,c	;volatile
   706                           
   707                           ;display.c: 145:     LCD_RS_flag = 0;
   708  0012A0  0E00               	movlw	0
   709  0012A2  6E17               	movwf	_LCD_RS_flag+1,c	;volatile
   710  0012A4  0E00               	movlw	0
   711  0012A6  6E16               	movwf	_LCD_RS_flag,c	;volatile
   712                           
   713                           ;display.c: 146:  DelayMs(60);
   714  0012A8  0E00               	movlw	0
   715  0012AA  6E06               	movwf	DelayMs@x+1,c
   716  0012AC  0E3C               	movlw	60
   717  0012AE  6E05               	movwf	DelayMs@x,c
   718  0012B0  ECDF  F00B         	call	_DelayMs	;wreg free
   719                           
   720                           ;display.c: 148:  LATC = 0x03;
   721  0012B4  0E03               	movlw	3
   722  0012B6  6E8B               	movwf	3979,c	;volatile
   723                           
   724                           ;display.c: 149:  { {_delay(2);}; LATC |= 0x10; {_delay(2);}; LATC = LATC & 0x0F; {_dela
      +                          y(2);}; };
   725  0012B8  D000               	nop2		;2 cycle nop
   726  0012BA  888B               	bsf	3979,4,c	;volatile
   727  0012BC  D000               	nop2		;2 cycle nop
   728  0012BE  508B               	movf	3979,w,c	;volatile
   729  0012C0  0B0F               	andlw	15
   730  0012C2  6E8B               	movwf	3979,c	;volatile
   731  0012C4  D000               	nop2		;2 cycle nop
   732                           
   733                           ;display.c: 150:  DelayMs(10);
   734  0012C6  0E00               	movlw	0
   735  0012C8  6E06               	movwf	DelayMs@x+1,c
   736  0012CA  0E0A               	movlw	10
   737  0012CC  6E05               	movwf	DelayMs@x,c
   738  0012CE  ECDF  F00B         	call	_DelayMs	;wreg free
   739                           
   740                           ;display.c: 152:  { {_delay(2);}; LATC |= 0x10; {_delay(2);}; LATC = LATC & 0x0F; {_dela
      +                          y(2);}; };
   741  0012D2  D000               	nop2		;2 cycle nop
   742  0012D4  888B               	bsf	3979,4,c	;volatile
   743  0012D6  D000               	nop2		;2 cycle nop
   744  0012D8  508B               	movf	3979,w,c	;volatile
   745  0012DA  0B0F               	andlw	15
   746  0012DC  6E8B               	movwf	3979,c	;volatile
   747  0012DE  D000               	nop2		;2 cycle nop
   748                           
   749                           ;display.c: 153:     {_delay(50);};
   750  0012E0  0E10               	movlw	16
   751  0012E2                     u697:
   752  0012E2  2EE8               	decfsz	wreg,f,c
   753  0012E4  D7FE               	bra	u697
   754  0012E6  D000               	nop2	
   755                           
   756                           ;display.c: 155:  { {_delay(2);}; LATC |= 0x10; {_delay(2);}; LATC = LATC & 0x0F; {_dela
      +                          y(2);}; };
   757  0012E8  D000               	nop2		;2 cycle nop
   758  0012EA  888B               	bsf	3979,4,c	;volatile
   759  0012EC  D000               	nop2		;2 cycle nop
   760  0012EE  508B               	movf	3979,w,c	;volatile
   761  0012F0  0B0F               	andlw	15
   762  0012F2  6E8B               	movwf	3979,c	;volatile
   763  0012F4  D000               	nop2		;2 cycle nop
   764                           
   765                           ;display.c: 156:  {_delay(50);};
   766  0012F6  0E10               	movlw	16
   767  0012F8                     u707:
   768  0012F8  2EE8               	decfsz	wreg,f,c
   769  0012FA  D7FE               	bra	u707
   770  0012FC  D000               	nop2	
   771                           
   772                           ;display.c: 158:  LATC = 0x2;
   773  0012FE  0E02               	movlw	2
   774  001300  6E8B               	movwf	3979,c	;volatile
   775                           
   776                           ;display.c: 159:  { {_delay(2);}; LATC |= 0x10; {_delay(2);}; LATC = LATC & 0x0F; {_dela
      +                          y(2);}; };
   777  001302  D000               	nop2		;2 cycle nop
   778  001304  888B               	bsf	3979,4,c	;volatile
   779  001306  D000               	nop2		;2 cycle nop
   780  001308  508B               	movf	3979,w,c	;volatile
   781  00130A  0B0F               	andlw	15
   782  00130C  6E8B               	movwf	3979,c	;volatile
   783  00130E  D000               	nop2		;2 cycle nop
   784                           
   785                           ;display.c: 160:     {_delay(50);};
   786  001310  0E10               	movlw	16
   787  001312                     u717:
   788  001312  2EE8               	decfsz	wreg,f,c
   789  001314  D7FE               	bra	u717
   790  001316  D000               	nop2	
   791                           
   792                           ;display.c: 162:  lcd_write(0x29);
   793  001318  0E29               	movlw	41
   794  00131A  EC79  F00A         	call	_lcd_write
   795                           
   796                           ;display.c: 164:  lcd_write(0x1D);
   797  00131E  0E1D               	movlw	29
   798  001320  EC79  F00A         	call	_lcd_write
   799                           
   800                           ;display.c: 165:     lcd_write(0x79);
   801  001324  0E79               	movlw	121
   802  001326  EC79  F00A         	call	_lcd_write
   803                           
   804                           ;display.c: 166:     lcd_write(0x50);
   805  00132A  0E50               	movlw	80
   806  00132C  EC79  F00A         	call	_lcd_write
   807                           
   808                           ;display.c: 167:     lcd_write(0x6C);
   809  001330  0E6C               	movlw	108
   810  001332  EC79  F00A         	call	_lcd_write
   811                           
   812                           ;display.c: 169:  lcd_write(0x28);
   813  001336  0E28               	movlw	40
   814  001338  EC79  F00A         	call	_lcd_write
   815                           
   816                           ;display.c: 170:  lcd_write(0x0E);
   817  00133C  0E0E               	movlw	14
   818  00133E  EC79  F00A         	call	_lcd_write
   819                           
   820                           ;display.c: 171:  lcd_write(0x01);
   821  001342  0E01               	movlw	1
   822  001344  EC79  F00A         	call	_lcd_write
   823                           
   824                           ;display.c: 172:  lcd_write(0x06);
   825  001348  0E06               	movlw	6
   826  00134A  EC79  F00A         	call	_lcd_write
   827  00134E  0012               	return		;funcret
   828  001350                     __end_of_lcd_init:
   829                           	opt callstack 0
   830                           
   831 ;; *************** function _getTime *****************
   832 ;; Defined at:
   833 ;;		line 97 in file "yunimain.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;		None
   836 ;; Auto vars:     Size  Location     Type
   837 ;;		None
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;Total ram usage:        0 bytes
   852 ;; Hardware stack levels used:    1
   853 ;; Hardware stack levels required when called:    4
   854 ;; This function calls:
   855 ;;		_I2C_Read_Block
   856 ;;		_I2C_Set_Address
   857 ;;		_I2C_Start
   858 ;;		_I2C_Stop
   859 ;; This function is called by:
   860 ;;		_main
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           	psect	text5
   865  00170A                     __ptext5:
   866                           	opt callstack 0
   867  00170A                     _getTime:
   868                           	opt callstack 26
   869                           
   870                           ;yunimain.c: 98: 
   871                           
   872                           ;incstack = 0
   873  00170A  EC12  F00C         	call	_I2C_Stop	;wreg free
   874                           
   875                           ;yunimain.c: 99: 
   876  00170E  0E00               	movlw	0
   877  001710  6E05               	movwf	I2C_Set_Address@func,c
   878  001712  0E00               	movlw	0
   879  001714  ECF3  F00B         	call	_I2C_Set_Address
   880                           
   881                           ;yunimain.c: 100: 
   882  001718  EC1F  F00C         	call	_I2C_Start	;wreg free
   883                           
   884                           ;yunimain.c: 101: 
   885  00171C  0E01               	movlw	1
   886  00171E  6E05               	movwf	I2C_Set_Address@func,c
   887  001720  0E00               	movlw	0
   888  001722  ECF3  F00B         	call	_I2C_Set_Address
   889                           
   890                           ;yunimain.c: 102: 
   891  001726  0E19               	movlw	low _RTC
   892  001728  6E05               	movwf	I2C_Read_Block@p_dta,c
   893  00172A  0E00               	movlw	high _RTC
   894  00172C  6E06               	movwf	I2C_Read_Block@p_dta+1,c
   895  00172E  0E05               	movlw	5
   896  001730  EC4E  F00A         	call	_I2C_Read_Block
   897                           
   898                           ;yunimain.c: 103: 
   899  001734  EC12  F00C         	call	_I2C_Stop	;wreg free
   900  001738  0012               	return		;funcret
   901  00173A                     __end_of_getTime:
   902                           	opt callstack 0
   903                           
   904 ;; *************** function _I2C_Read_Block *****************
   905 ;; Defined at:
   906 ;;		line 47 in file "i2c2.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;  i               1    wreg     unsigned char 
   909 ;;  p_dta           2    4[COMRAM] PTR unsigned char 
   910 ;;		 -> RTC(5), 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;  i               1   10[COMRAM] unsigned char 
   913 ;;  j               1   11[COMRAM] unsigned char 
   914 ;; Return value:  Size  Location     Type
   915 ;;                  1    wreg      void 
   916 ;; Registers used:
   917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   923 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;Total ram usage:        8 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    3
   930 ;; This function calls:
   931 ;;		_I2C_Read_B
   932 ;;		_I2C_Stop
   933 ;; This function is called by:
   934 ;;		_getTime
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text6
   939  00149C                     __ptext6:
   940                           	opt callstack 0
   941  00149C                     _I2C_Read_Block:
   942                           	opt callstack 26
   943                           
   944                           ;incstack = 0
   945                           ;I2C_Read_Block@i stored from wreg
   946  00149C  6E0B               	movwf	I2C_Read_Block@i,c
   947                           
   948                           ;i2c2.c: 47: void I2C_Read_Block(uint8_t i, uint8_t *p_dta);i2c2.c: 48: {;i2c2.c: 49:  u
      +                          int8_t j;;i2c2.c: 50:  for (j = 0; j < i; j++) {
   949  00149E  0E00               	movlw	0
   950  0014A0  6E0C               	movwf	I2C_Read_Block@j,c
   951  0014A2  D020               	goto	l1893
   952  0014A4                     l1883:
   953                           
   954                           ;i2c2.c: 51:   if ((j + 1) != i)
   955  0014A4  500B               	movf	I2C_Read_Block@i,w,c
   956  0014A6  6E07               	movwf	??_I2C_Read_Block& (0+255),c
   957  0014A8  6A08               	clrf	(??_I2C_Read_Block+1)& (0+255),c
   958  0014AA  500C               	movf	I2C_Read_Block@j,w,c
   959  0014AC  6E09               	movwf	(??_I2C_Read_Block+2)& (0+255),c
   960  0014AE  6A0A               	clrf	(??_I2C_Read_Block+3)& (0+255),c
   961  0014B0  0E01               	movlw	1
   962  0014B2  2609               	addwf	??_I2C_Read_Block+2,f,c
   963  0014B4  0E00               	movlw	0
   964  0014B6  220A               	addwfc	??_I2C_Read_Block+3,f,c
   965  0014B8  5007               	movf	??_I2C_Read_Block,w,c
   966  0014BA  1809               	xorwf	??_I2C_Read_Block+2,w,c
   967  0014BC  E104               	bnz	u550
   968  0014BE  5008               	movf	??_I2C_Read_Block+1,w,c
   969  0014C0  180A               	xorwf	??_I2C_Read_Block+3,w,c
   970  0014C2  B4D8               	btfsc	status,2,c
   971  0014C4  D004               	goto	l1887
   972  0014C6                     u550:
   973                           
   974                           ;i2c2.c: 52:    *p_dta = I2C_Read_B(1);
   975  0014C6  0E01               	movlw	1
   976  0014C8  ECCA  F00A         	call	_I2C_Read_B
   977  0014CC  D003               	goto	L1
   978  0014CE                     l1887:
   979                           
   980                           ;i2c2.c: 54:    *p_dta = I2C_Read_B(0);
   981  0014CE  0E00               	movlw	0
   982  0014D0  ECCA  F00A         	call	_I2C_Read_B
   983  0014D4                     L1:
   984  0014D4  C005  FFD9         	movff	I2C_Read_Block@p_dta,fsr2l
   985  0014D8  C006  FFDA         	movff	I2C_Read_Block@p_dta+1,fsr2h
   986  0014DC  6EDF               	movwf	indf2,c
   987                           
   988                           ;i2c2.c: 55:   p_dta++;
   989  0014DE  4A05               	infsnz	I2C_Read_Block@p_dta,f,c
   990  0014E0  2A06               	incf	I2C_Read_Block@p_dta+1,f,c
   991                           
   992                           ;i2c2.c: 56:  }
   993  0014E2  2A0C               	incf	I2C_Read_Block@j,f,c
   994  0014E4                     l1893:
   995  0014E4  500B               	movf	I2C_Read_Block@i,w,c
   996  0014E6  5C0C               	subwf	I2C_Read_Block@j,w,c
   997  0014E8  A0D8               	btfss	status,0,c
   998  0014EA  D7DC               	goto	l1883
   999                           
  1000                           ;i2c2.c: 57:  I2C_Stop();
  1001  0014EC  EC12  F00C         	call	_I2C_Stop	;wreg free
  1002  0014F0  0012               	return		;funcret
  1003  0014F2                     __end_of_I2C_Read_Block:
  1004                           	opt callstack 0
  1005                           
  1006 ;; *************** function _I2C_Read_B *****************
  1007 ;; Defined at:
  1008 ;;		line 128 in file "i2c2.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;  ack             1    wreg     unsigned char 
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;  ack             1    1[COMRAM] unsigned char 
  1013 ;;  dta             1    3[COMRAM] unsigned char 
  1014 ;;  cnt             1    2[COMRAM] unsigned char 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      unsigned char 
  1017 ;; Registers used:
  1018 ;;		wreg, status,2, status,0, cstack
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;Total ram usage:        3 bytes
  1029 ;; Hardware stack levels used:    1
  1030 ;; Hardware stack levels required when called:    2
  1031 ;; This function calls:
  1032 ;;		_I2C_Ack_Out
  1033 ;;		_I2C_NoAck_Out
  1034 ;;		_I2C_Wait
  1035 ;; This function is called by:
  1036 ;;		_I2C_Read_Block
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text7
  1041  001594                     __ptext7:
  1042                           	opt callstack 0
  1043  001594                     _I2C_Read_B:
  1044                           	opt callstack 26
  1045                           
  1046                           ;incstack = 0
  1047                           ;I2C_Read_B@ack stored from wreg
  1048  001594  6E02               	movwf	I2C_Read_B@ack,c
  1049                           
  1050                           ;i2c2.c: 128: uint8_t I2C_Read_B (uint8_t ack);i2c2.c: 129: {;i2c2.c: 130:  uint8_t dta 
      +                          = 0;
  1051  001596  0E00               	movlw	0
  1052  001598  6E04               	movwf	I2C_Read_B@dta,c
  1053                           
  1054                           ;i2c2.c: 131:  uint8_t cnt = 8;
  1055  00159A  0E08               	movlw	8
  1056  00159C  6E03               	movwf	I2C_Read_B@cnt,c
  1057                           
  1058                           ;i2c2.c: 133:  TRISDbits.TRISD0 = 0; TRISDbits.TRISD1 = 1;
  1059  00159E  9095               	bcf	3989,0,c	;volatile
  1060  0015A0  8295               	bsf	3989,1,c	;volatile
  1061                           
  1062                           ;i2c2.c: 134:         I2C_Wait();
  1063  0015A2  EC5F  F00C         	call	_I2C_Wait	;wreg free
  1064  0015A6                     l1211:
  1065                           
  1066                           ;i2c2.c: 136:  {;i2c2.c: 137:   LATDbits.LATD0 = 1;
  1067  0015A6  808C               	bsf	3980,0,c	;volatile
  1068                           
  1069                           ;i2c2.c: 138:   dta <<= 1;
  1070  0015A8  90D8               	bcf	status,0,c
  1071  0015AA  3604               	rlcf	I2C_Read_B@dta,f,c
  1072                           
  1073                           ;i2c2.c: 139:                 I2C_Wait();
  1074  0015AC  EC5F  F00C         	call	_I2C_Wait	;wreg free
  1075                           
  1076                           ;i2c2.c: 140:   dta |= PORTDbits.RD1 ? 1 : 0;
  1077  0015B0  A283               	btfss	3971,1,c	;volatile
  1078  0015B2  D002               	goto	u150
  1079  0015B4  0E01               	movlw	1
  1080  0015B6  D001               	goto	u156
  1081  0015B8                     u150:
  1082  0015B8  0E00               	movlw	0
  1083  0015BA                     u156:
  1084  0015BA  1204               	iorwf	I2C_Read_B@dta,f,c
  1085                           
  1086                           ;i2c2.c: 141:         LATDbits.LATD0 = 0;
  1087  0015BC  908C               	bcf	3980,0,c	;volatile
  1088                           
  1089                           ;i2c2.c: 142:                 I2C_Wait();
  1090  0015BE  EC5F  F00C         	call	_I2C_Wait	;wreg free
  1091                           
  1092                           ;i2c2.c: 143:  } while (--cnt);
  1093  0015C2  2E03               	decfsz	I2C_Read_B@cnt,f,c
  1094  0015C4  D7F0               	goto	l1211
  1095                           
  1096                           ;i2c2.c: 145:  TRISDbits.TRISD0 = 0; TRISDbits.TRISD1 = 0;
  1097  0015C6  9095               	bcf	3989,0,c	;volatile
  1098  0015C8  9295               	bcf	3989,1,c	;volatile
  1099                           
  1100                           ;i2c2.c: 147:  if (ack)
  1101  0015CA  5002               	movf	I2C_Read_B@ack,w,c
  1102  0015CC  B4D8               	btfsc	status,2,c
  1103  0015CE  D003               	goto	l1229
  1104                           
  1105                           ;i2c2.c: 148:   I2C_Ack_Out();
  1106  0015D0  EC50  F00C         	call	_I2C_Ack_Out	;wreg free
  1107  0015D4  D002               	goto	l1231
  1108  0015D6                     l1229:
  1109                           
  1110                           ;i2c2.c: 150:   I2C_NoAck_Out();
  1111  0015D6  EC48  F00C         	call	_I2C_NoAck_Out	;wreg free
  1112  0015DA                     l1231:
  1113                           
  1114                           ;i2c2.c: 151:  return (dta);
  1115  0015DA  5004               	movf	I2C_Read_B@dta,w,c
  1116  0015DC  0012               	return		;funcret
  1117  0015DE                     __end_of_I2C_Read_B:
  1118                           	opt callstack 0
  1119                           
  1120 ;; *************** function _I2C_NoAck_Out *****************
  1121 ;; Defined at:
  1122 ;;		line 176 in file "i2c2.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, status,2, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1140 ;;Total ram usage:        0 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; Hardware stack levels required when called:    1
  1143 ;; This function calls:
  1144 ;;		_I2C_Wait
  1145 ;; This function is called by:
  1146 ;;		_I2C_Read_B
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text8
  1151  001890                     __ptext8:
  1152                           	opt callstack 0
  1153  001890                     _I2C_NoAck_Out:
  1154                           	opt callstack 26
  1155                           
  1156                           ;i2c2.c: 178:  LATDbits.LATD1 = 1;
  1157                           
  1158                           ;incstack = 0
  1159  001890  828C               	bsf	3980,1,c	;volatile
  1160                           
  1161                           ;i2c2.c: 179:  I2C_Wait();
  1162  001892  EC5F  F00C         	call	_I2C_Wait	;wreg free
  1163                           
  1164                           ;i2c2.c: 180:  LATDbits.LATD0 = 1;
  1165  001896  808C               	bsf	3980,0,c	;volatile
  1166                           
  1167                           ;i2c2.c: 181:  I2C_Wait();
  1168  001898  EC5F  F00C         	call	_I2C_Wait	;wreg free
  1169                           
  1170                           ;i2c2.c: 182:  LATDbits.LATD0 = 0;
  1171  00189C  908C               	bcf	3980,0,c	;volatile
  1172  00189E  0012               	return		;funcret
  1173  0018A0                     __end_of_I2C_NoAck_Out:
  1174                           	opt callstack 0
  1175                           
  1176 ;; *************** function _I2C_Ack_Out *****************
  1177 ;; Defined at:
  1178 ;;		line 189 in file "i2c2.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;		None
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;		None
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, status,2, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;Total ram usage:        0 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; Hardware stack levels required when called:    1
  1199 ;; This function calls:
  1200 ;;		_I2C_Wait
  1201 ;; This function is called by:
  1202 ;;		_I2C_Read_B
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text9
  1207  0018A0                     __ptext9:
  1208                           	opt callstack 0
  1209  0018A0                     _I2C_Ack_Out:
  1210                           	opt callstack 26
  1211                           
  1212                           ;i2c2.c: 191:  LATDbits.LATD1 = 0;
  1213                           
  1214                           ;incstack = 0
  1215  0018A0  928C               	bcf	3980,1,c	;volatile
  1216                           
  1217                           ;i2c2.c: 192:  I2C_Wait();
  1218  0018A2  EC5F  F00C         	call	_I2C_Wait	;wreg free
  1219                           
  1220                           ;i2c2.c: 193:  LATDbits.LATD0 = 1;
  1221  0018A6  808C               	bsf	3980,0,c	;volatile
  1222                           
  1223                           ;i2c2.c: 194:  I2C_Wait();
  1224  0018A8  EC5F  F00C         	call	_I2C_Wait	;wreg free
  1225                           
  1226                           ;i2c2.c: 195:  LATDbits.LATD0 = 0;
  1227  0018AC  908C               	bcf	3980,0,c	;volatile
  1228  0018AE  0012               	return		;funcret
  1229  0018B0                     __end_of_I2C_Ack_Out:
  1230                           	opt callstack 0
  1231                           
  1232 ;; *************** function _display *****************
  1233 ;; Defined at:
  1234 ;;		line 140 in file "yunimain.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  tmp             1    8[COMRAM] unsigned char 
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg, status,2, status,0, cstack
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1251 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1252 ;;Total ram usage:        1 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    3
  1255 ;; This function calls:
  1256 ;;		_lcd_clear
  1257 ;;		_lcd_goto
  1258 ;;		_lcd_putchar
  1259 ;;		_printBinary
  1260 ;; This function is called by:
  1261 ;;		_main
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text10
  1266  0011B6                     __ptext10:
  1267                           	opt callstack 0
  1268  0011B6                     _display:
  1269                           	opt callstack 27
  1270                           
  1271                           ;yunimain.c: 141: 
  1272                           
  1273                           ;incstack = 0
  1274  0011B6  C01E  F009         	movff	_secondsD,display@tmp
  1275                           
  1276                           ;yunimain.c: 143:             printBinary(secondsT);
  1277  0011BA  381D               	swapf	_RTC+4,w,c
  1278  0011BC  0B0F               	andlw	15
  1279  0011BE  0B0F               	andlw	15
  1280  0011C0  6E23               	movwf	_hoursT,c
  1281                           
  1282                           ;yunimain.c: 144:             lcd_putchar('|');
  1283  0011C2  501D               	movf	_RTC+4,w,c
  1284  0011C4  0B0F               	andlw	15
  1285  0011C6  6E22               	movwf	_hoursD,c
  1286                           
  1287                           ;yunimain.c: 145:             printBinary(secondsD);
  1288  0011C8  381C               	swapf	_RTC+3,w,c
  1289  0011CA  0B0F               	andlw	15
  1290  0011CC  0B0F               	andlw	15
  1291  0011CE  6E21               	movwf	_minutesT,c
  1292                           
  1293                           ;yunimain.c: 146:             lcd_putchar(' ');
  1294  0011D0  501C               	movf	_RTC+3,w,c
  1295  0011D2  0B0F               	andlw	15
  1296  0011D4  6E20               	movwf	_minutesD,c
  1297                           
  1298                           ;yunimain.c: 147:             lcd_putchar('0' + secondsT);
  1299  0011D6  381B               	swapf	_RTC+2,w,c
  1300  0011D8  0B0F               	andlw	15
  1301  0011DA  0B0F               	andlw	15
  1302  0011DC  6E1F               	movwf	_secondsT,c
  1303                           
  1304                           ;yunimain.c: 148:             lcd_putchar('0' + secondsD);
  1305  0011DE  501B               	movf	_RTC+2,w,c
  1306  0011E0  0B0F               	andlw	15
  1307  0011E2  6E1E               	movwf	_secondsD,c
  1308                           
  1309                           ;yunimain.c: 150: 
  1310  0011E4  501E               	movf	_secondsD,w,c
  1311  0011E6  1809               	xorwf	display@tmp,w,c
  1312  0011E8  B4D8               	btfsc	status,2,c
  1313  0011EA  0012               	return	
  1314                           
  1315                           ;yunimain.c: 151:             lcd_clear();
  1316  0011EC  5018               	movf	_mode,w,c
  1317  0011EE  B4D8               	btfsc	status,2,c
  1318  0011F0  D031               	goto	l2005
  1319                           
  1320                           ;yunimain.c: 154:             lcd_putchar('0' + hoursD);
  1321  0011F2  EC04  F00C         	call	_lcd_clear	;wreg free
  1322                           
  1323                           ;yunimain.c: 155:             lcd_putchar(':');
  1324  0011F6  0E00               	movlw	0
  1325  0011F8  EC2C  F00C         	call	_lcd_goto
  1326                           
  1327                           ;yunimain.c: 156:             lcd_putchar('0' + minutesT);
  1328  0011FC  5021               	movf	_minutesT,w,c
  1329  0011FE  EC53  F00B         	call	_printBinary
  1330                           
  1331                           ;yunimain.c: 157:             lcd_putchar('0' + minutesD);
  1332  001202  0E7C               	movlw	124
  1333  001204  EC3F  F00C         	call	_lcd_putchar
  1334                           
  1335                           ;yunimain.c: 158:             lcd_putchar(':');
  1336  001208  5020               	movf	_minutesD,w,c
  1337  00120A  EC53  F00B         	call	_printBinary
  1338                           
  1339                           ;yunimain.c: 159:             lcd_putchar('0' + secondsT);
  1340  00120E  0E20               	movlw	32
  1341  001210  EC3F  F00C         	call	_lcd_putchar
  1342                           
  1343                           ;yunimain.c: 160:             lcd_putchar('0' + secondsD);
  1344  001214  5021               	movf	_minutesT,w,c
  1345  001216  0F30               	addlw	48
  1346  001218  EC3F  F00C         	call	_lcd_putchar
  1347                           
  1348                           ;yunimain.c: 161:         }
  1349  00121C  5020               	movf	_minutesD,w,c
  1350  00121E  0F30               	addlw	48
  1351  001220  EC3F  F00C         	call	_lcd_putchar
  1352                           
  1353                           ;yunimain.c: 164: 
  1354  001224  0E28               	movlw	40
  1355  001226  EC2C  F00C         	call	_lcd_goto
  1356                           
  1357                           ;yunimain.c: 165: 
  1358  00122A  501F               	movf	_secondsT,w,c
  1359  00122C  EC53  F00B         	call	_printBinary
  1360                           
  1361                           ;yunimain.c: 166: 
  1362  001230  0E7C               	movlw	124
  1363  001232  EC3F  F00C         	call	_lcd_putchar
  1364                           
  1365                           ;yunimain.c: 167: 
  1366  001236  501E               	movf	_secondsD,w,c
  1367  001238  EC53  F00B         	call	_printBinary
  1368                           
  1369                           ;yunimain.c: 168: int pressedButton() {
  1370  00123C  0E20               	movlw	32
  1371  00123E  EC3F  F00C         	call	_lcd_putchar
  1372                           
  1373                           ;yunimain.c: 169:     if(!PORTBbits.RB0) {
  1374  001242  501F               	movf	_secondsT,w,c
  1375  001244  0F30               	addlw	48
  1376  001246  EC3F  F00C         	call	_lcd_putchar
  1377                           
  1378                           ;yunimain.c: 170:         DelayMs(50);
  1379  00124A  501E               	movf	_secondsD,w,c
  1380  00124C  0F30               	addlw	48
  1381  00124E  EC3F  F00C         	call	_lcd_putchar
  1382                           
  1383                           ;yunimain.c: 171:         if(!PORTBbits.RB0) return 0;
  1384  001252  0012               	return	
  1385  001254                     l2005:
  1386                           
  1387                           ;yunimain.c: 173:     else if(!PORTBbits.RB1) {
  1388  001254  EC04  F00C         	call	_lcd_clear	;wreg free
  1389                           
  1390                           ;yunimain.c: 174:         DelayMs(50);
  1391  001258  0E00               	movlw	0
  1392  00125A  EC2C  F00C         	call	_lcd_goto
  1393                           
  1394                           ;yunimain.c: 175:         if(!PORTBbits.RB1) return 1;
  1395  00125E  5023               	movf	_hoursT,w,c
  1396  001260  0F30               	addlw	48
  1397  001262  EC3F  F00C         	call	_lcd_putchar
  1398                           
  1399                           ;yunimain.c: 176:     }
  1400  001266  5022               	movf	_hoursD,w,c
  1401  001268  0F30               	addlw	48
  1402  00126A  EC3F  F00C         	call	_lcd_putchar
  1403                           
  1404                           ;yunimain.c: 177:     else if(!PORTBbits.RB2) {
  1405  00126E  0E3A               	movlw	58
  1406  001270  EC3F  F00C         	call	_lcd_putchar
  1407                           
  1408                           ;yunimain.c: 178:         DelayMs(50);
  1409  001274  5021               	movf	_minutesT,w,c
  1410  001276  0F30               	addlw	48
  1411  001278  EC3F  F00C         	call	_lcd_putchar
  1412                           
  1413                           ;yunimain.c: 179:         if(!PORTBbits.RB2) return 2;
  1414  00127C  5020               	movf	_minutesD,w,c
  1415  00127E  0F30               	addlw	48
  1416  001280  EC3F  F00C         	call	_lcd_putchar
  1417                           
  1418                           ;yunimain.c: 180:     }
  1419  001284  0E3A               	movlw	58
  1420  001286  EC3F  F00C         	call	_lcd_putchar
  1421                           
  1422                           ;yunimain.c: 181:     return -1;
  1423  00128A  501F               	movf	_secondsT,w,c
  1424  00128C  0F30               	addlw	48
  1425  00128E  EC3F  F00C         	call	_lcd_putchar
  1426                           
  1427                           ;yunimain.c: 182: }
  1428  001292  501E               	movf	_secondsD,w,c
  1429  001294  0F30               	addlw	48
  1430  001296  EC3F  F00C         	call	_lcd_putchar
  1431  00129A  0012               	return		;funcret
  1432  00129C                     __end_of_display:
  1433                           	opt callstack 0
  1434                           
  1435 ;; *************** function _printBinary *****************
  1436 ;; Defined at:
  1437 ;;		line 127 in file "yunimain.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;  number          1    wreg     unsigned char 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;  number          1    2[COMRAM] unsigned char 
  1442 ;;  i               1    5[COMRAM] unsigned char 
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg, status,2, status,0, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;Total ram usage:        4 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:    2
  1459 ;; This function calls:
  1460 ;;		_lcd_putchar
  1461 ;; This function is called by:
  1462 ;;		_display
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text11
  1467  0016A6                     __ptext11:
  1468                           	opt callstack 0
  1469  0016A6                     _printBinary:
  1470                           	opt callstack 27
  1471                           
  1472                           ;incstack = 0
  1473                           ;printBinary@number stored from wreg
  1474  0016A6  6E03               	movwf	printBinary@number,c
  1475                           
  1476                           ;yunimain.c: 128:     if(tmp != secondsD) {;yunimain.c: 130: 
  1477  0016A8  0E08               	movlw	8
  1478  0016AA  6E06               	movwf	printBinary@i,c
  1479  0016AC                     l1923:
  1480                           
  1481                           ;yunimain.c: 131: 
  1482  0016AC  5003               	movf	printBinary@number,w,c
  1483  0016AE  1406               	andwf	printBinary@i,w,c
  1484  0016B0  0900               	iorlw	0
  1485  0016B2  A4D8               	btfss	status,2,c
  1486  0016B4  D004               	goto	l1927
  1487  0016B6  0E00               	movlw	0
  1488  0016B8  6E05               	movwf	_printBinary$509+1,c
  1489  0016BA  0E6F               	movlw	111
  1490  0016BC  D003               	goto	L2
  1491  0016BE                     l1927:
  1492  0016BE  0E00               	movlw	0
  1493  0016C0  6E05               	movwf	_printBinary$509+1,c
  1494  0016C2  0E2A               	movlw	42
  1495  0016C4                     L2:
  1496  0016C4  6E04               	movwf	_printBinary$509,c
  1497  0016C6  5004               	movf	_printBinary$509,w,c
  1498  0016C8  EC3F  F00C         	call	_lcd_putchar
  1499  0016CC  90D8               	bcf	status,0,c
  1500  0016CE  3206               	rrcf	printBinary@i,f,c
  1501  0016D0  5006               	movf	printBinary@i,w,c
  1502  0016D2  B4D8               	btfsc	status,2,c
  1503  0016D4  0012               	return	
  1504  0016D6  D7EA               	goto	l1923
  1505  0016D8                     __end_of_printBinary:
  1506                           	opt callstack 0
  1507                           
  1508 ;; *************** function _clockStop *****************
  1509 ;; Defined at:
  1510 ;;		line 284 in file "yunimain.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;		None
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;Total ram usage:        0 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:    4
  1531 ;; This function calls:
  1532 ;;		_pressedButton
  1533 ;;		_setTime
  1534 ;; This function is called by:
  1535 ;;		_main
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text12
  1540  00186C                     __ptext12:
  1541                           	opt callstack 0
  1542  00186C                     _clockStop:
  1543                           	opt callstack 26
  1544                           
  1545                           ;yunimain.c: 285:             case 2 :
  1546                           
  1547                           ;incstack = 0
  1548  00186C  EC1E  F00A         	call	_pressedButton	;wreg free
  1549  001870  5009               	movf	?_pressedButton,w,c
  1550  001872  100A               	iorwf	?_pressedButton+1,w,c
  1551  001874  A4D8               	btfss	status,2,c
  1552  001876  D7FA               	goto	_clockStop
  1553                           
  1554                           ;yunimain.c: 286:                 mode = ~mode;
  1555  001878  EC36  F00B         	call	_setTime	;wreg free
  1556  00187C  0012               	return		;funcret
  1557  00187E                     __end_of_clockStop:
  1558                           	opt callstack 0
  1559                           
  1560 ;; *************** function _clockSetup *****************
  1561 ;; Defined at:
  1562 ;;		line 235 in file "yunimain.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;		None
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  pos             2   19[COMRAM] int 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1577 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1578 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1579 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1580 ;;Total ram usage:        4 bytes
  1581 ;; Hardware stack levels used:    1
  1582 ;; Hardware stack levels required when called:    4
  1583 ;; This function calls:
  1584 ;;		_DelayMs
  1585 ;;		_lcd_clear
  1586 ;;		_lcd_goto
  1587 ;;		_lcd_puts
  1588 ;;		_readAndSet
  1589 ;;		_setTime
  1590 ;; This function is called by:
  1591 ;;		_main
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text13
  1596  001022                     __ptext13:
  1597                           	opt callstack 0
  1598  001022                     _clockSetup:
  1599                           	opt callstack 26
  1600                           
  1601                           ;yunimain.c: 236:                     break;
  1602                           
  1603                           ;incstack = 0
  1604  001022  5018               	movf	_mode,w,c
  1605  001024  A4D8               	btfss	status,2,c
  1606  001026  D0AC               	goto	l2041
  1607                           
  1608                           ;yunimain.c: 237:                 default:
  1609  001028  0E00               	movlw	0
  1610  00102A  6E15               	movwf	clockSetup@pos+1,c
  1611  00102C  0E00               	movlw	0
  1612  00102E  6E14               	movwf	clockSetup@pos,c
  1613                           
  1614                           ;yunimain.c: 238:                     break;
  1615  001030  D08A               	goto	l2033
  1616  001032                     l2011:
  1617                           
  1618                           ;yunimain.c: 241:         }
  1619  001032  C014  F00B         	movff	clockSetup@pos,readAndSet@pos
  1620  001036  C015  F00C         	movff	clockSetup@pos+1,readAndSet@pos+1
  1621  00103A  0E23               	movlw	low _hoursT
  1622  00103C  6E0D               	movwf	readAndSet@valueReg,c
  1623  00103E  0E00               	movlw	high _hoursT
  1624  001040  6E0E               	movwf	readAndSet@valueReg+1,c
  1625  001042  0E00               	movlw	0
  1626  001044  6E10               	movwf	readAndSet@max+1,c
  1627  001046  0E02               	movlw	2
  1628  001048  6E0F               	movwf	readAndSet@max,c
  1629  00104A  ECA8  F009         	call	_readAndSet	;wreg free
  1630                           
  1631                           ;yunimain.c: 242:         RTC.secondsReg = (secondsT << 4) | (secondsD);
  1632  00104E  D079               	goto	l2031
  1633  001050                     l2013:
  1634                           
  1635                           ;yunimain.c: 244:         RTC.hoursReg = (hoursT << 4) | (hoursD);
  1636  001050  0E02               	movlw	2
  1637  001052  1823               	xorwf	_hoursT,w,c
  1638  001054  A4D8               	btfss	status,2,c
  1639  001056  D00F               	goto	l2017
  1640  001058  C014  F00B         	movff	clockSetup@pos,readAndSet@pos
  1641  00105C  C015  F00C         	movff	clockSetup@pos+1,readAndSet@pos+1
  1642  001060  0E22               	movlw	low _hoursD
  1643  001062  6E0D               	movwf	readAndSet@valueReg,c
  1644  001064  0E00               	movlw	high _hoursD
  1645  001066  6E0E               	movwf	readAndSet@valueReg+1,c
  1646  001068  0E00               	movlw	0
  1647  00106A  6E10               	movwf	readAndSet@max+1,c
  1648  00106C  0E03               	movlw	3
  1649  00106E  6E0F               	movwf	readAndSet@max,c
  1650  001070  ECA8  F009         	call	_readAndSet	;wreg free
  1651  001074  D066               	goto	l2031
  1652  001076                     l2017:
  1653  001076  C014  F00B         	movff	clockSetup@pos,readAndSet@pos
  1654  00107A  C015  F00C         	movff	clockSetup@pos+1,readAndSet@pos+1
  1655  00107E  0E22               	movlw	low _hoursD
  1656  001080  6E0D               	movwf	readAndSet@valueReg,c
  1657  001082  0E00               	movlw	high _hoursD
  1658  001084  6E0E               	movwf	readAndSet@valueReg+1,c
  1659  001086  0E00               	movlw	0
  1660  001088  6E10               	movwf	readAndSet@max+1,c
  1661  00108A  0E09               	movlw	9
  1662  00108C  6E0F               	movwf	readAndSet@max,c
  1663  00108E  ECA8  F009         	call	_readAndSet	;wreg free
  1664  001092  D057               	goto	l2031
  1665  001094                     l2019:
  1666                           
  1667                           ;yunimain.c: 248:         lcd_clear();
  1668  001094  C014  F00B         	movff	clockSetup@pos,readAndSet@pos
  1669  001098  C015  F00C         	movff	clockSetup@pos+1,readAndSet@pos+1
  1670  00109C  0E21               	movlw	low _minutesT
  1671  00109E  6E0D               	movwf	readAndSet@valueReg,c
  1672  0010A0  0E00               	movlw	high _minutesT
  1673  0010A2  6E0E               	movwf	readAndSet@valueReg+1,c
  1674  0010A4  0E00               	movlw	0
  1675  0010A6  6E10               	movwf	readAndSet@max+1,c
  1676  0010A8  0E05               	movlw	5
  1677  0010AA  6E0F               	movwf	readAndSet@max,c
  1678  0010AC  ECA8  F009         	call	_readAndSet	;wreg free
  1679                           
  1680                           ;yunimain.c: 249:         lcd_goto(0);
  1681  0010B0  D048               	goto	l2031
  1682  0010B2                     l2021:
  1683                           
  1684                           ;yunimain.c: 251:         lcd_goto(40);
  1685  0010B2  C014  F00B         	movff	clockSetup@pos,readAndSet@pos
  1686  0010B6  C015  F00C         	movff	clockSetup@pos+1,readAndSet@pos+1
  1687  0010BA  0E20               	movlw	low _minutesD
  1688  0010BC  6E0D               	movwf	readAndSet@valueReg,c
  1689  0010BE  0E00               	movlw	high _minutesD
  1690  0010C0  6E0E               	movwf	readAndSet@valueReg+1,c
  1691  0010C2  0E00               	movlw	0
  1692  0010C4  6E10               	movwf	readAndSet@max+1,c
  1693  0010C6  0E09               	movlw	9
  1694  0010C8  6E0F               	movwf	readAndSet@max,c
  1695  0010CA  ECA8  F009         	call	_readAndSet	;wreg free
  1696                           
  1697                           ;yunimain.c: 252:         lcd_puts("in binary mode");
  1698  0010CE  D039               	goto	l2031
  1699  0010D0                     l2023:
  1700                           
  1701                           ;yunimain.c: 254:     }
  1702  0010D0  C014  F00B         	movff	clockSetup@pos,readAndSet@pos
  1703  0010D4  C015  F00C         	movff	clockSetup@pos+1,readAndSet@pos+1
  1704  0010D8  0E1F               	movlw	low _secondsT
  1705  0010DA  6E0D               	movwf	readAndSet@valueReg,c
  1706  0010DC  0E00               	movlw	high _secondsT
  1707  0010DE  6E0E               	movwf	readAndSet@valueReg+1,c
  1708  0010E0  0E00               	movlw	0
  1709  0010E2  6E10               	movwf	readAndSet@max+1,c
  1710  0010E4  0E05               	movlw	5
  1711  0010E6  6E0F               	movwf	readAndSet@max,c
  1712  0010E8  ECA8  F009         	call	_readAndSet	;wreg free
  1713                           
  1714                           ;yunimain.c: 255: }
  1715  0010EC  D02A               	goto	l2031
  1716  0010EE                     l2025:
  1717                           
  1718                           ;yunimain.c: 257: 
  1719  0010EE  C014  F00B         	movff	clockSetup@pos,readAndSet@pos
  1720  0010F2  C015  F00C         	movff	clockSetup@pos+1,readAndSet@pos+1
  1721  0010F6  0E1E               	movlw	low _secondsD
  1722  0010F8  6E0D               	movwf	readAndSet@valueReg,c
  1723  0010FA  0E00               	movlw	high _secondsD
  1724  0010FC  6E0E               	movwf	readAndSet@valueReg+1,c
  1725  0010FE  0E00               	movlw	0
  1726  001100  6E10               	movwf	readAndSet@max+1,c
  1727  001102  0E09               	movlw	9
  1728  001104  6E0F               	movwf	readAndSet@max,c
  1729  001106  ECA8  F009         	call	_readAndSet	;wreg free
  1730                           
  1731                           ;yunimain.c: 258: 
  1732  00110A  D01B               	goto	l2031
  1733  00110C                     l2029:
  1734  00110C  C014  F012         	movff	clockSetup@pos,??_clockSetup
  1735  001110  C015  F013         	movff	clockSetup@pos+1,??_clockSetup+1
  1736                           
  1737                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1738                           ; Switch size 1, requested type "simple"
  1739                           ; Number of cases is 1, Range of values is 0 to 0
  1740                           ; switch strategies available:
  1741                           ; Name         Instructions Cycles
  1742                           ; simple_byte            4     3 (average)
  1743                           ;	Chosen strategy is simple_byte
  1744  001114  5013               	movf	??_clockSetup+1,w,c
  1745  001116  0A00               	xorlw	0	; case 0
  1746  001118  A4D8               	btfss	status,2,c
  1747  00111A  D013               	goto	l2031
  1748                           
  1749                           ; Switch size 1, requested type "simple"
  1750                           ; Number of cases is 6, Range of values is 0 to 7
  1751                           ; switch strategies available:
  1752                           ; Name         Instructions Cycles
  1753                           ; simple_byte           19    10 (average)
  1754                           ;	Chosen strategy is simple_byte
  1755  00111C  5012               	movf	??_clockSetup,w,c
  1756  00111E  0A00               	xorlw	0	; case 0
  1757  001120  B4D8               	btfsc	status,2,c
  1758  001122  D787               	goto	l2011
  1759  001124  0A01               	xorlw	1	; case 1
  1760  001126  B4D8               	btfsc	status,2,c
  1761  001128  D793               	goto	l2013
  1762  00112A  0A02               	xorlw	2	; case 3
  1763  00112C  B4D8               	btfsc	status,2,c
  1764  00112E  D7B2               	goto	l2019
  1765  001130  0A07               	xorlw	7	; case 4
  1766  001132  B4D8               	btfsc	status,2,c
  1767  001134  D7BE               	goto	l2021
  1768  001136  0A02               	xorlw	2	; case 6
  1769  001138  B4D8               	btfsc	status,2,c
  1770  00113A  D7CA               	goto	l2023
  1771  00113C  0A01               	xorlw	1	; case 7
  1772  00113E  B4D8               	btfsc	status,2,c
  1773  001140  D7D6               	goto	l2025
  1774  001142                     l2031:
  1775                           
  1776                           ;yunimain.c: 262: void clockStop() {
  1777  001142  4A14               	infsnz	clockSetup@pos,f,c
  1778  001144  2A15               	incf	clockSetup@pos+1,f,c
  1779  001146                     l2033:
  1780                           
  1781                           ;yunimain.c: 238:                     break;
  1782  001146  BE15               	btfsc	clockSetup@pos+1,7,c
  1783  001148  D7E1               	goto	l2029
  1784  00114A  5015               	movf	clockSetup@pos+1,w,c
  1785  00114C  E104               	bnz	u650
  1786  00114E  0E08               	movlw	8
  1787  001150  5C14               	subwf	clockSetup@pos,w,c
  1788  001152  A0D8               	btfss	status,0,c
  1789  001154  D7DB               	goto	l2029
  1790  001156                     u650:
  1791                           
  1792                           ;yunimain.c: 264:     setTime();
  1793  001156  381F               	swapf	_secondsT,w,c
  1794  001158  0BF0               	andlw	240
  1795  00115A  101E               	iorwf	_secondsD,w,c
  1796  00115C  6E1B               	movwf	_RTC+2,c
  1797                           
  1798                           ;yunimain.c: 265: }
  1799  00115E  3821               	swapf	_minutesT,w,c
  1800  001160  0BF0               	andlw	240
  1801  001162  1020               	iorwf	_minutesD,w,c
  1802  001164  6E1C               	movwf	_RTC+3,c
  1803                           
  1804                           ;yunimain.c: 266: 
  1805  001166  3823               	swapf	_hoursT,w,c
  1806  001168  0BF0               	andlw	240
  1807  00116A  1022               	iorwf	_hoursD,w,c
  1808  00116C  6E1D               	movwf	_RTC+4,c
  1809                           
  1810                           ;yunimain.c: 267: void main() {
  1811  00116E  EC36  F00B         	call	_setTime	;wreg free
  1812                           
  1813                           ;yunimain.c: 268: 
  1814  001172  0E00               	movlw	0
  1815  001174  6E06               	movwf	DelayMs@x+1,c
  1816  001176  0E64               	movlw	100
  1817  001178  6E05               	movwf	DelayMs@x,c
  1818  00117A  ECDF  F00B         	call	_DelayMs	;wreg free
  1819                           
  1820                           ;yunimain.c: 269:     init();
  1821  00117E  0012               	return	
  1822  001180                     l2041:
  1823                           
  1824                           ;yunimain.c: 270: 
  1825  001180  EC04  F00C         	call	_lcd_clear	;wreg free
  1826                           
  1827                           ;yunimain.c: 271:     setTime();
  1828  001184  0E00               	movlw	0
  1829  001186  EC2C  F00C         	call	_lcd_goto
  1830                           
  1831                           ;yunimain.c: 272:     RTC.controlReg = 0;
  1832  00118A  0E01               	movlw	low STR_1
  1833  00118C  6E02               	movwf	lcd_puts@s,c
  1834  00118E  0E10               	movlw	high STR_1
  1835  001190  6E03               	movwf	lcd_puts@s+1,c
  1836  001192  EC6C  F00B         	call	_lcd_puts	;wreg free
  1837                           
  1838                           ;yunimain.c: 273:     setTime();
  1839  001196  0E28               	movlw	40
  1840  001198  EC2C  F00C         	call	_lcd_goto
  1841                           
  1842                           ;yunimain.c: 274: 
  1843  00119C  0E11               	movlw	low STR_2
  1844  00119E  6E02               	movwf	lcd_puts@s,c
  1845  0011A0  0E10               	movlw	high STR_2
  1846  0011A2  6E03               	movwf	lcd_puts@s+1,c
  1847  0011A4  EC6C  F00B         	call	_lcd_puts	;wreg free
  1848                           
  1849                           ;yunimain.c: 275:     while(1) {
  1850  0011A8  0E07               	movlw	7
  1851  0011AA  6E06               	movwf	DelayMs@x+1,c
  1852  0011AC  0ED0               	movlw	208
  1853  0011AE  6E05               	movwf	DelayMs@x,c
  1854  0011B0  ECDF  F00B         	call	_DelayMs	;wreg free
  1855  0011B4  0012               	return		;funcret
  1856  0011B6                     __end_of_clockSetup:
  1857                           	opt callstack 0
  1858                           
  1859 ;; *************** function _setTime *****************
  1860 ;; Defined at:
  1861 ;;		line 109 in file "yunimain.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;		None
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;  ptr             2    6[COMRAM] PTR unsigned char 
  1866 ;;		 -> RTC.controlReg(1), RTC(5), 
  1867 ;;  i               1    8[COMRAM] unsigned char 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      void 
  1870 ;; Registers used:
  1871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1878 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1880 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;Total ram usage:        3 bytes
  1882 ;; Hardware stack levels used:    1
  1883 ;; Hardware stack levels required when called:    3
  1884 ;; This function calls:
  1885 ;;		_I2C_Set_Address
  1886 ;;		_I2C_Stop
  1887 ;;		_I2C_Write_B
  1888 ;; This function is called by:
  1889 ;;		_clockSetup
  1890 ;;		_clockStop
  1891 ;;		_main
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           	psect	text14
  1896  00166C                     __ptext14:
  1897                           	opt callstack 0
  1898  00166C                     _setTime:
  1899                           	opt callstack 27
  1900                           
  1901                           ;yunimain.c: 110: };yunimain.c: 111: 
  1902                           
  1903                           ;incstack = 0
  1904  00166C  0E19               	movlw	low _RTC
  1905  00166E  6E07               	movwf	setTime@ptr,c
  1906  001670  0E00               	movlw	high _RTC
  1907  001672  6E08               	movwf	setTime@ptr+1,c
  1908                           
  1909                           ;yunimain.c: 112: 
  1910  001674  EC12  F00C         	call	_I2C_Stop	;wreg free
  1911                           
  1912                           ;yunimain.c: 113: 
  1913  001678  0E00               	movlw	0
  1914  00167A  6E05               	movwf	I2C_Set_Address@func,c
  1915  00167C  0E00               	movlw	0
  1916  00167E  ECF3  F00B         	call	_I2C_Set_Address
  1917                           
  1918                           ;yunimain.c: 114: 
  1919  001682  0E00               	movlw	0
  1920  001684  6E09               	movwf	setTime@i,c
  1921  001686                     l1907:
  1922                           
  1923                           ;yunimain.c: 115: 
  1924  001686  C007  FFD9         	movff	setTime@ptr,fsr2l
  1925  00168A  C008  FFDA         	movff	setTime@ptr+1,fsr2h
  1926  00168E  50DF               	movf	indf2,w,c
  1927  001690  ECEF  F00A         	call	_I2C_Write_B
  1928                           
  1929                           ;yunimain.c: 116: 
  1930  001694  4A07               	infsnz	setTime@ptr,f,c
  1931  001696  2A08               	incf	setTime@ptr+1,f,c
  1932                           
  1933                           ;yunimain.c: 117: 
  1934  001698  2A09               	incf	setTime@i,f,c
  1935  00169A  0E04               	movlw	4
  1936  00169C  6409               	cpfsgt	setTime@i,c
  1937  00169E  D7F3               	goto	l1907
  1938                           
  1939                           ;yunimain.c: 118: void display() {
  1940  0016A0  EC12  F00C         	call	_I2C_Stop	;wreg free
  1941  0016A4  0012               	return		;funcret
  1942  0016A6                     __end_of_setTime:
  1943                           	opt callstack 0
  1944                           
  1945 ;; *************** function _I2C_Stop *****************
  1946 ;; Defined at:
  1947 ;;		line 81 in file "i2c2.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;		None
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;		None
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      void 
  1954 ;; Registers used:
  1955 ;;		wreg, status,2, cstack
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;Total ram usage:        0 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; Hardware stack levels required when called:    1
  1968 ;; This function calls:
  1969 ;;		_I2C_Wait
  1970 ;; This function is called by:
  1971 ;;		_getTime
  1972 ;;		_setTime
  1973 ;;		_I2C_Read_Block
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           	psect	text15
  1978  001824                     __ptext15:
  1979                           	opt callstack 0
  1980  001824                     _I2C_Stop:
  1981                           	opt callstack 28
  1982                           
  1983                           ;i2c2.c: 83:  TRISDbits.TRISD0 = 0; TRISDbits.TRISD1 = 0;
  1984                           
  1985                           ;incstack = 0
  1986  001824  9095               	bcf	3989,0,c	;volatile
  1987  001826  9295               	bcf	3989,1,c	;volatile
  1988                           
  1989                           ;i2c2.c: 85:  LATDbits.LATD1 = 0;
  1990  001828  928C               	bcf	3980,1,c	;volatile
  1991                           
  1992                           ;i2c2.c: 86:  I2C_Wait();
  1993  00182A  EC5F  F00C         	call	_I2C_Wait	;wreg free
  1994                           
  1995                           ;i2c2.c: 87:  LATDbits.LATD0 = 0;
  1996  00182E  908C               	bcf	3980,0,c	;volatile
  1997                           
  1998                           ;i2c2.c: 88:  I2C_Wait();
  1999  001830  EC5F  F00C         	call	_I2C_Wait	;wreg free
  2000                           
  2001                           ;i2c2.c: 89:  LATDbits.LATD0 = 1;
  2002  001834  808C               	bsf	3980,0,c	;volatile
  2003                           
  2004                           ;i2c2.c: 90:  I2C_Wait();
  2005  001836  EC5F  F00C         	call	_I2C_Wait	;wreg free
  2006                           
  2007                           ;i2c2.c: 91:  LATDbits.LATD1 = 1;
  2008  00183A  828C               	bsf	3980,1,c	;volatile
  2009  00183C  0012               	return		;funcret
  2010  00183E                     __end_of_I2C_Stop:
  2011                           	opt callstack 0
  2012                           
  2013 ;; *************** function _I2C_Set_Address *****************
  2014 ;; Defined at:
  2015 ;;		line 26 in file "i2c2.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  adr             1    wreg     unsigned char 
  2018 ;;  func            1    4[COMRAM] unsigned char 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  adr             1    5[COMRAM] unsigned char 
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg, status,2, status,0, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2030 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;Total ram usage:        2 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:    2
  2037 ;; This function calls:
  2038 ;;		_I2C_Start
  2039 ;;		_I2C_Write_B
  2040 ;; This function is called by:
  2041 ;;		_getTime
  2042 ;;		_setTime
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text16
  2047  0017E6                     __ptext16:
  2048                           	opt callstack 0
  2049  0017E6                     _I2C_Set_Address:
  2050                           	opt callstack 27
  2051                           
  2052                           ;incstack = 0
  2053                           ;I2C_Set_Address@adr stored from wreg
  2054  0017E6  6E06               	movwf	I2C_Set_Address@adr,c
  2055                           
  2056                           ;i2c2.c: 26:  void I2C_Set_Address(uint8_t adr, uint8_t func);i2c2.c: 28: {;i2c2.c: 29: 
      +                           I2C_Start();
  2057  0017E8  EC1F  F00C         	call	_I2C_Start	;wreg free
  2058                           
  2059                           ;i2c2.c: 31:  if (!func) {
  2060  0017EC  5005               	movf	I2C_Set_Address@func,w,c
  2061  0017EE  A4D8               	btfss	status,2,c
  2062  0017F0  D007               	goto	l1801
  2063                           
  2064                           ;i2c2.c: 32:   I2C_Write_B(0xa0);
  2065  0017F2  0EA0               	movlw	160
  2066  0017F4  ECEF  F00A         	call	_I2C_Write_B
  2067                           
  2068                           ;i2c2.c: 33:                 I2C_Write_B(adr);
  2069  0017F8  5006               	movf	I2C_Set_Address@adr,w,c
  2070  0017FA  ECEF  F00A         	call	_I2C_Write_B
  2071                           
  2072                           ;i2c2.c: 34:         }
  2073  0017FE  0012               	return	
  2074  001800                     l1801:
  2075                           
  2076                           ;i2c2.c: 36:   I2C_Write_B(0xa1);
  2077  001800  0EA1               	movlw	161
  2078  001802  ECEF  F00A         	call	_I2C_Write_B
  2079  001806  0012               	return		;funcret
  2080  001808                     __end_of_I2C_Set_Address:
  2081                           	opt callstack 0
  2082                           
  2083 ;; *************** function _I2C_Write_B *****************
  2084 ;; Defined at:
  2085 ;;		line 99 in file "i2c2.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  dta             1    wreg     unsigned char 
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;  dta             1    2[COMRAM] unsigned char 
  2090 ;;  cnt             1    3[COMRAM] unsigned char 
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      void 
  2093 ;; Registers used:
  2094 ;;		wreg, status,2, status,0, cstack
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2104 ;;Total ram usage:        3 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; Hardware stack levels required when called:    1
  2107 ;; This function calls:
  2108 ;;		_I2C_Wait
  2109 ;; This function is called by:
  2110 ;;		_setTime
  2111 ;;		_I2C_Set_Address
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text17
  2116  0015DE                     __ptext17:
  2117                           	opt callstack 0
  2118  0015DE                     _I2C_Write_B:
  2119                           	opt callstack 28
  2120                           
  2121                           ;incstack = 0
  2122                           ;I2C_Write_B@dta stored from wreg
  2123  0015DE  6E03               	movwf	I2C_Write_B@dta,c
  2124                           
  2125                           ;i2c2.c: 99: void I2C_Write_B (uint8_t dta);i2c2.c: 100: {;i2c2.c: 101:  uint8_t cnt = 8
      +                          ;
  2126  0015E0  0E08               	movlw	8
  2127  0015E2  6E04               	movwf	I2C_Write_B@cnt,c
  2128  0015E4                     l991:
  2129                           
  2130                           ;i2c2.c: 103:  {;i2c2.c: 104:   LATDbits.LATD1 = (dta & 0x80)? 1 : 0;
  2131  0015E4  AE03               	btfss	I2C_Write_B@dta,7,c
  2132  0015E6  D003               	goto	u30
  2133  0015E8  6A02               	clrf	??_I2C_Write_B& (0+255),c
  2134  0015EA  2A02               	incf	??_I2C_Write_B& (0+255),f,c
  2135  0015EC  D001               	goto	u48
  2136  0015EE                     u30:
  2137  0015EE  6A02               	clrf	??_I2C_Write_B& (0+255),c
  2138  0015F0                     u48:
  2139  0015F0  4602               	rlncf	??_I2C_Write_B,f,c
  2140  0015F2  508C               	movf	3980,w,c	;volatile
  2141  0015F4  1802               	xorwf	??_I2C_Write_B,w,c
  2142  0015F6  0BFD               	andlw	-3
  2143  0015F8  1802               	xorwf	??_I2C_Write_B,w,c
  2144  0015FA  6E8C               	movwf	3980,c	;volatile
  2145                           
  2146                           ;i2c2.c: 105:   I2C_Wait();
  2147  0015FC  EC5F  F00C         	call	_I2C_Wait	;wreg free
  2148                           
  2149                           ;i2c2.c: 106:   LATDbits.LATD0 = 1;
  2150  001600  808C               	bsf	3980,0,c	;volatile
  2151                           
  2152                           ;i2c2.c: 107:   I2C_Wait();
  2153  001602  EC5F  F00C         	call	_I2C_Wait	;wreg free
  2154                           
  2155                           ;i2c2.c: 108:   LATDbits.LATD0 = 0;
  2156  001606  908C               	bcf	3980,0,c	;volatile
  2157                           
  2158                           ;i2c2.c: 109:   dta <<= 1;
  2159  001608  90D8               	bcf	status,0,c
  2160  00160A  3603               	rlcf	I2C_Write_B@dta,f,c
  2161                           
  2162                           ;i2c2.c: 110:  } while (--cnt);
  2163  00160C  2E04               	decfsz	I2C_Write_B@cnt,f,c
  2164  00160E  D7EA               	goto	l991
  2165                           
  2166                           ;i2c2.c: 112:  TRISDbits.TRISD0 = 0; TRISDbits.TRISD1 = 1;
  2167  001610  9095               	bcf	3989,0,c	;volatile
  2168  001612  8295               	bsf	3989,1,c	;volatile
  2169                           
  2170                           ;i2c2.c: 114:  LATDbits.LATD0 = 1;
  2171  001614  808C               	bsf	3980,0,c	;volatile
  2172                           
  2173                           ;i2c2.c: 115:  I2C_Wait();
  2174  001616  EC5F  F00C         	call	_I2C_Wait	;wreg free
  2175                           
  2176                           ;i2c2.c: 116:  LATDbits.LATD0 = 0;
  2177  00161A  908C               	bcf	3980,0,c	;volatile
  2178                           
  2179                           ;i2c2.c: 117:  I2C_Wait();
  2180  00161C  EC5F  F00C         	call	_I2C_Wait	;wreg free
  2181                           
  2182                           ;i2c2.c: 119:  TRISDbits.TRISD0 = 0; TRISDbits.TRISD1 = 0;
  2183  001620  9095               	bcf	3989,0,c	;volatile
  2184  001622  9295               	bcf	3989,1,c	;volatile
  2185  001624  0012               	return		;funcret
  2186  001626                     __end_of_I2C_Write_B:
  2187                           	opt callstack 0
  2188                           
  2189 ;; *************** function _I2C_Start *****************
  2190 ;; Defined at:
  2191 ;;		line 64 in file "i2c2.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;		None
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;		None
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      void 
  2198 ;; Registers used:
  2199 ;;		wreg, status,2, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;Total ram usage:        0 bytes
  2210 ;; Hardware stack levels used:    1
  2211 ;; Hardware stack levels required when called:    1
  2212 ;; This function calls:
  2213 ;;		_I2C_Wait
  2214 ;; This function is called by:
  2215 ;;		_getTime
  2216 ;;		_I2C_Set_Address
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text18
  2221  00183E                     __ptext18:
  2222                           	opt callstack 0
  2223  00183E                     _I2C_Start:
  2224                           	opt callstack 27
  2225                           
  2226                           ;i2c2.c: 66:  TRISDbits.TRISD0 = 0; TRISDbits.TRISD1 = 0;
  2227                           
  2228                           ;incstack = 0
  2229  00183E  9095               	bcf	3989,0,c	;volatile
  2230  001840  9295               	bcf	3989,1,c	;volatile
  2231                           
  2232                           ;i2c2.c: 68:  LATDbits.LATD0 = 1;
  2233  001842  808C               	bsf	3980,0,c	;volatile
  2234                           
  2235                           ;i2c2.c: 69:  I2C_Wait();
  2236  001844  EC5F  F00C         	call	_I2C_Wait	;wreg free
  2237                           
  2238                           ;i2c2.c: 70:  LATDbits.LATD1 = 1;
  2239  001848  828C               	bsf	3980,1,c	;volatile
  2240                           
  2241                           ;i2c2.c: 71:  I2C_Wait();
  2242  00184A  EC5F  F00C         	call	_I2C_Wait	;wreg free
  2243                           
  2244                           ;i2c2.c: 72:  LATDbits.LATD1 = 0;
  2245  00184E  928C               	bcf	3980,1,c	;volatile
  2246                           
  2247                           ;i2c2.c: 73:  I2C_Wait();
  2248  001850  EC5F  F00C         	call	_I2C_Wait	;wreg free
  2249                           
  2250                           ;i2c2.c: 74:  LATDbits.LATD0 = 0;
  2251  001854  908C               	bcf	3980,0,c	;volatile
  2252  001856  0012               	return		;funcret
  2253  001858                     __end_of_I2C_Start:
  2254                           	opt callstack 0
  2255                           
  2256 ;; *************** function _I2C_Wait *****************
  2257 ;; Defined at:
  2258 ;;		line 11 in file "i2c2.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;		None
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  cnt             1    0[COMRAM] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg, status,2
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;Total ram usage:        1 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_I2C_Start
  2282 ;;		_I2C_Stop
  2283 ;;		_I2C_Write_B
  2284 ;;		_I2C_Read_B
  2285 ;;		_I2C_NoAck_Out
  2286 ;;		_I2C_Ack_Out
  2287 ;;		_I2C_Ack_In
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           	psect	text19
  2292  0018BE                     __ptext19:
  2293                           	opt callstack 0
  2294  0018BE                     _I2C_Wait:
  2295                           	opt callstack 28
  2296                           
  2297                           ;i2c2.c: 13:         uint8_t cnt = 10;
  2298                           
  2299                           ;incstack = 0
  2300  0018BE  0E0A               	movlw	10
  2301  0018C0  6E01               	movwf	I2C_Wait@cnt,c
  2302  0018C2                     l246:
  2303  0018C2  2E01               	decfsz	I2C_Wait@cnt,f,c
  2304  0018C4  D7FE               	goto	l246
  2305  0018C6  0012               	return		;funcret
  2306  0018C8                     __end_of_I2C_Wait:
  2307                           	opt callstack 0
  2308                           
  2309 ;; *************** function _readAndSet *****************
  2310 ;; Defined at:
  2311 ;;		line 212 in file "yunimain.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  pos             2   10[COMRAM] int 
  2314 ;;  valueReg        2   12[COMRAM] PTR unsigned char 
  2315 ;;		 -> hoursD(1), hoursT(1), minutesD(1), minutesT(1), 
  2316 ;;		 -> secondsD(1), secondsT(1), 
  2317 ;;  max             2   14[COMRAM] int 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;		None
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  1    wreg      void 
  2322 ;; Registers used:
  2323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2329 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2331 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2332 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;Total ram usage:        7 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; Hardware stack levels required when called:    3
  2336 ;; This function calls:
  2337 ;;		_DelayMs
  2338 ;;		___awmod
  2339 ;;		_lcd_goto
  2340 ;;		_lcd_putchar
  2341 ;;		_pressedButton
  2342 ;; This function is called by:
  2343 ;;		_clockSetup
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           	psect	text20
  2348  001350                     __ptext20:
  2349                           	opt callstack 0
  2350  001350                     _readAndSet:
  2351                           	opt callstack 26
  2352                           
  2353                           ;yunimain.c: 213: void clockSetup() {
  2354                           
  2355                           ;incstack = 0
  2356  001350  500B               	movf	readAndSet@pos,w,c
  2357  001352  EC2C  F00C         	call	_lcd_goto
  2358  001356                     l114:
  2359                           
  2360                           ;yunimain.c: 215:         int pos = 0;
  2361  001356  0E00               	movlw	0
  2362  001358  6E06               	movwf	DelayMs@x+1,c
  2363  00135A  0E64               	movlw	100
  2364  00135C  6E05               	movwf	DelayMs@x,c
  2365  00135E  ECDF  F00B         	call	_DelayMs	;wreg free
  2366                           
  2367                           ;yunimain.c: 216:         while(pos < 8) {
  2368  001362  D026               	goto	l1951
  2369  001364                     l1943:
  2370                           
  2371                           ;yunimain.c: 218:                 case 0:
  2372  001364  C00D  FFD9         	movff	readAndSet@valueReg,fsr2l
  2373  001368  C00E  FFDA         	movff	readAndSet@valueReg+1,fsr2h
  2374  00136C  50DF               	movf	indf2,w,c
  2375  00136E  6E11               	movwf	??_readAndSet& (0+255),c
  2376  001370  0E01               	movlw	1
  2377  001372  2411               	addwf	??_readAndSet,w,c
  2378  001374  6E01               	movwf	___awmod@dividend,c
  2379  001376  6A02               	clrf	___awmod@dividend+1,c
  2380  001378  0E00               	movlw	0
  2381  00137A  2202               	addwfc	___awmod@dividend+1,f,c
  2382  00137C  0E01               	movlw	1
  2383  00137E  240F               	addwf	readAndSet@max,w,c
  2384  001380  6E03               	movwf	___awmod@divisor,c
  2385  001382  0E00               	movlw	0
  2386  001384  2010               	addwfc	readAndSet@max+1,w,c
  2387  001386  6E04               	movwf	___awmod@divisor+1,c
  2388  001388  ECE6  F009         	call	___awmod	;wreg free
  2389  00138C  5001               	movf	?___awmod,w,c
  2390  00138E  C00D  FFD9         	movff	readAndSet@valueReg,fsr2l
  2391  001392  C00E  FFDA         	movff	readAndSet@valueReg+1,fsr2h
  2392  001396  6EDF               	movwf	indf2,c
  2393                           
  2394                           ;yunimain.c: 219:                     readAndSet(pos, &hoursT, 2);
  2395  001398  500B               	movf	readAndSet@pos,w,c
  2396  00139A  EC2C  F00C         	call	_lcd_goto
  2397                           
  2398                           ;yunimain.c: 220:                     break;
  2399  00139E  C00D  FFD9         	movff	readAndSet@valueReg,fsr2l
  2400  0013A2  C00E  FFDA         	movff	readAndSet@valueReg+1,fsr2h
  2401  0013A6  50DF               	movf	indf2,w,c
  2402  0013A8  0F30               	addlw	48
  2403  0013AA  EC3F  F00C         	call	_lcd_putchar
  2404                           
  2405                           ;yunimain.c: 221:                 case 1:
  2406  0013AE  D7D3               	goto	l114
  2407  0013B0                     l1951:
  2408  0013B0  EC1E  F00A         	call	_pressedButton	;wreg free
  2409                           
  2410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2411                           ; Switch size 1, requested type "simple"
  2412                           ; Number of cases is 1, Range of values is 0 to 0
  2413                           ; switch strategies available:
  2414                           ; Name         Instructions Cycles
  2415                           ; simple_byte            4     3 (average)
  2416                           ;	Chosen strategy is simple_byte
  2417  0013B4  500A               	movf	?_pressedButton+1,w,c
  2418  0013B6  0A00               	xorlw	0	; case 0
  2419  0013B8  A4D8               	btfss	status,2,c
  2420  0013BA  D7CD               	goto	l114
  2421                           
  2422                           ; Switch size 1, requested type "simple"
  2423                           ; Number of cases is 2, Range of values is 0 to 1
  2424                           ; switch strategies available:
  2425                           ; Name         Instructions Cycles
  2426                           ; simple_byte            7     4 (average)
  2427                           ;	Chosen strategy is simple_byte
  2428  0013BC  5009               	movf	?_pressedButton,w,c
  2429  0013BE  0A00               	xorlw	0	; case 0
  2430  0013C0  B4D8               	btfsc	status,2,c
  2431  0013C2  D7D0               	goto	l1943
  2432  0013C4  0A01               	xorlw	1	; case 1
  2433  0013C6  B4D8               	btfsc	status,2,c
  2434  0013C8  0012               	return		;funcret
  2435  0013CA  D7C5               	goto	l114
  2436  0013CC                     __end_of_readAndSet:
  2437                           	opt callstack 0
  2438                           
  2439 ;; *************** function _pressedButton *****************
  2440 ;; Defined at:
  2441 ;;		line 190 in file "yunimain.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  2    8[COMRAM] int 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2455 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;Total ram usage:        2 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    2
  2462 ;; This function calls:
  2463 ;;		_DelayMs
  2464 ;; This function is called by:
  2465 ;;		_readAndSet
  2466 ;;		_clockStop
  2467 ;;		_main
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           	psect	text21
  2472  00143C                     __ptext21:
  2473                           	opt callstack 0
  2474  00143C                     _pressedButton:
  2475                           	opt callstack 28
  2476                           
  2477                           ;yunimain.c: 191:     lcd_goto(pos);
  2478                           
  2479                           ;incstack = 0
  2480  00143C  B081               	btfsc	3969,0,c	;volatile
  2481  00143E  D00D               	goto	l103
  2482                           
  2483                           ;yunimain.c: 192:     while(1) {
  2484  001440  0E00               	movlw	0
  2485  001442  6E06               	movwf	DelayMs@x+1,c
  2486  001444  0E32               	movlw	50
  2487  001446  6E05               	movwf	DelayMs@x,c
  2488  001448  ECDF  F00B         	call	_DelayMs	;wreg free
  2489                           
  2490                           ;yunimain.c: 193:         DelayMs(100);
  2491  00144C  B081               	btfsc	3969,0,c	;volatile
  2492  00144E  D023               	goto	l106
  2493  001450  0E00               	movlw	0
  2494  001452  6E0A               	movwf	?_pressedButton+1,c
  2495  001454  0E00               	movlw	0
  2496  001456  6E09               	movwf	?_pressedButton,c
  2497  001458  0012               	return	
  2498  00145A                     l103:
  2499  00145A  B281               	btfsc	3969,1,c	;volatile
  2500  00145C  D00D               	goto	l107
  2501                           
  2502                           ;yunimain.c: 196:                 *valueReg = (*valueReg + 1) % (max + 1);
  2503  00145E  0E00               	movlw	0
  2504  001460  6E06               	movwf	DelayMs@x+1,c
  2505  001462  0E32               	movlw	50
  2506  001464  6E05               	movwf	DelayMs@x,c
  2507  001466  ECDF  F00B         	call	_DelayMs	;wreg free
  2508                           
  2509                           ;yunimain.c: 197:                 lcd_goto(pos);
  2510  00146A  B281               	btfsc	3969,1,c	;volatile
  2511  00146C  D014               	goto	l106
  2512  00146E  0E00               	movlw	0
  2513  001470  6E0A               	movwf	?_pressedButton+1,c
  2514  001472  0E01               	movlw	1
  2515  001474  6E09               	movwf	?_pressedButton,c
  2516  001476  0012               	return	
  2517  001478                     l107:
  2518  001478  B481               	btfsc	3969,2,c	;volatile
  2519  00147A  D00D               	goto	l106
  2520                           
  2521                           ;yunimain.c: 200:             case 1 :
  2522  00147C  0E00               	movlw	0
  2523  00147E  6E06               	movwf	DelayMs@x+1,c
  2524  001480  0E32               	movlw	50
  2525  001482  6E05               	movwf	DelayMs@x,c
  2526  001484  ECDF  F00B         	call	_DelayMs	;wreg free
  2527                           
  2528                           ;yunimain.c: 201:                 return;
  2529  001488  B481               	btfsc	3969,2,c	;volatile
  2530  00148A  D005               	goto	l106
  2531  00148C  0E00               	movlw	0
  2532  00148E  6E0A               	movwf	?_pressedButton+1,c
  2533  001490  0E02               	movlw	2
  2534  001492  6E09               	movwf	?_pressedButton,c
  2535  001494  0012               	return	
  2536  001496                     l106:
  2537                           
  2538                           ;yunimain.c: 203:                 break;
  2539  001496  6809               	setf	?_pressedButton,c
  2540  001498  680A               	setf	?_pressedButton+1,c
  2541  00149A  0012               	return		;funcret
  2542  00149C                     __end_of_pressedButton:
  2543                           	opt callstack 0
  2544                           
  2545 ;; *************** function _lcd_putchar *****************
  2546 ;; Defined at:
  2547 ;;		line 76 in file "display.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  s               1    wreg     unsigned char 
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  s               1    1[COMRAM] unsigned char 
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, status,0, cstack
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;Total ram usage:        1 bytes
  2566 ;; Hardware stack levels used:    1
  2567 ;; Hardware stack levels required when called:    1
  2568 ;; This function calls:
  2569 ;;		_lcd_write
  2570 ;; This function is called by:
  2571 ;;		_printBinary
  2572 ;;		_display
  2573 ;;		_readAndSet
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text22
  2578  00187E                     __ptext22:
  2579                           	opt callstack 0
  2580  00187E                     _lcd_putchar:
  2581                           	opt callstack 27
  2582                           
  2583                           ;incstack = 0
  2584                           ;lcd_putchar@s stored from wreg
  2585  00187E  6E02               	movwf	lcd_putchar@s,c
  2586                           
  2587                           ;display.c: 77:  LCD_RS_flag = 1;
  2588  001880  0E00               	movlw	0
  2589  001882  6E17               	movwf	_LCD_RS_flag+1,c	;volatile
  2590  001884  0E01               	movlw	1
  2591  001886  6E16               	movwf	_LCD_RS_flag,c	;volatile
  2592                           
  2593                           ;display.c: 78:  lcd_write(s);
  2594  001888  5002               	movf	lcd_putchar@s,w,c
  2595  00188A  EC79  F00A         	call	_lcd_write
  2596  00188E  0012               	return		;funcret
  2597  001890                     __end_of_lcd_putchar:
  2598                           	opt callstack 0
  2599                           
  2600 ;; *************** function _lcd_goto *****************
  2601 ;; Defined at:
  2602 ;;		line 132 in file "display.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  pos             1    wreg     unsigned char 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  pos             1    1[COMRAM] unsigned char 
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  1    wreg      void 
  2609 ;; Registers used:
  2610 ;;		wreg, status,2, status,0, cstack
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;Total ram usage:        1 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    1
  2623 ;; This function calls:
  2624 ;;		_lcd_write
  2625 ;; This function is called by:
  2626 ;;		_display
  2627 ;;		_readAndSet
  2628 ;;		_clockSetup
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           	psect	text23
  2633  001858                     __ptext23:
  2634                           	opt callstack 0
  2635  001858                     _lcd_goto:
  2636                           	opt callstack 28
  2637                           
  2638                           ;incstack = 0
  2639                           ;lcd_goto@pos stored from wreg
  2640  001858  6E02               	movwf	lcd_goto@pos,c
  2641                           
  2642                           ;display.c: 132: lcd_goto(unsigned char pos);display.c: 133: {;display.c: 134:  LCD_RS_f
      +                          lag = 0;
  2643  00185A  0E00               	movlw	0
  2644  00185C  6E17               	movwf	_LCD_RS_flag+1,c	;volatile
  2645  00185E  0E00               	movlw	0
  2646  001860  6E16               	movwf	_LCD_RS_flag,c	;volatile
  2647                           
  2648                           ;display.c: 135:  lcd_write(0x80+pos);
  2649  001862  5002               	movf	lcd_goto@pos,w,c
  2650  001864  0F80               	addlw	128
  2651  001866  EC79  F00A         	call	_lcd_write
  2652  00186A  0012               	return		;funcret
  2653  00186C                     __end_of_lcd_goto:
  2654                           	opt callstack 0
  2655                           
  2656 ;; *************** function ___awmod *****************
  2657 ;; Defined at:
  2658 ;;		line 7 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/awmod.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  dividend        2    0[COMRAM] int 
  2661 ;;  divisor         2    2[COMRAM] int 
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;  sign            1    5[COMRAM] unsigned char 
  2664 ;;  counter         1    4[COMRAM] unsigned char 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  2    0[COMRAM] int 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2674 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2678 ;;Total ram usage:        6 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_readAndSet
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           	psect	text24
  2688  0013CC                     __ptext24:
  2689                           	opt callstack 0
  2690  0013CC                     ___awmod:
  2691                           	opt callstack 28
  2692                           
  2693                           ;incstack = 0
  2694  0013CC  0E00               	movlw	0
  2695  0013CE  6E06               	movwf	___awmod@sign,c
  2696  0013D0  AE02               	btfss	___awmod@dividend+1,7,c
  2697  0013D2  D006               	goto	l1845
  2698  0013D4  6C01               	negf	___awmod@dividend,c
  2699  0013D6  1E02               	comf	___awmod@dividend+1,f,c
  2700  0013D8  B0D8               	btfsc	status,0,c
  2701  0013DA  2A02               	incf	___awmod@dividend+1,f,c
  2702  0013DC  0E01               	movlw	1
  2703  0013DE  6E06               	movwf	___awmod@sign,c
  2704  0013E0                     l1845:
  2705  0013E0  AE04               	btfss	___awmod@divisor+1,7,c
  2706  0013E2  D004               	goto	l1849
  2707  0013E4  6C03               	negf	___awmod@divisor,c
  2708  0013E6  1E04               	comf	___awmod@divisor+1,f,c
  2709  0013E8  B0D8               	btfsc	status,0,c
  2710  0013EA  2A04               	incf	___awmod@divisor+1,f,c
  2711  0013EC                     l1849:
  2712  0013EC  5003               	movf	___awmod@divisor,w,c
  2713  0013EE  1004               	iorwf	___awmod@divisor+1,w,c
  2714  0013F0  B4D8               	btfsc	status,2,c
  2715  0013F2  D018               	goto	l1865
  2716  0013F4  0E01               	movlw	1
  2717  0013F6  6E05               	movwf	___awmod@counter,c
  2718  0013F8  D004               	goto	l1855
  2719  0013FA                     l1853:
  2720  0013FA  90D8               	bcf	status,0,c
  2721  0013FC  3603               	rlcf	___awmod@divisor,f,c
  2722  0013FE  3604               	rlcf	___awmod@divisor+1,f,c
  2723  001400  2A05               	incf	___awmod@counter,f,c
  2724  001402                     l1855:
  2725  001402  AE04               	btfss	___awmod@divisor+1,7,c
  2726  001404  D7FA               	goto	l1853
  2727  001406                     u520:
  2728  001406  5003               	movf	___awmod@divisor,w,c
  2729  001408  5C01               	subwf	___awmod@dividend,w,c
  2730  00140A  5004               	movf	___awmod@divisor+1,w,c
  2731  00140C  5802               	subwfb	___awmod@dividend+1,w,c
  2732  00140E  A0D8               	btfss	status,0,c
  2733  001410  D004               	goto	l1861
  2734  001412  5003               	movf	___awmod@divisor,w,c
  2735  001414  5E01               	subwf	___awmod@dividend,f,c
  2736  001416  5004               	movf	___awmod@divisor+1,w,c
  2737  001418  5A02               	subwfb	___awmod@dividend+1,f,c
  2738  00141A                     l1861:
  2739  00141A  90D8               	bcf	status,0,c
  2740  00141C  3204               	rrcf	___awmod@divisor+1,f,c
  2741  00141E  3203               	rrcf	___awmod@divisor,f,c
  2742  001420  2E05               	decfsz	___awmod@counter,f,c
  2743  001422  D7F1               	goto	u520
  2744  001424                     l1865:
  2745  001424  5006               	movf	___awmod@sign,w,c
  2746  001426  B4D8               	btfsc	status,2,c
  2747  001428  D004               	goto	l1869
  2748  00142A  6C01               	negf	___awmod@dividend,c
  2749  00142C  1E02               	comf	___awmod@dividend+1,f,c
  2750  00142E  B0D8               	btfsc	status,0,c
  2751  001430  2A02               	incf	___awmod@dividend+1,f,c
  2752  001432                     l1869:
  2753  001432  C001  F001         	movff	___awmod@dividend,?___awmod
  2754  001436  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2755  00143A  0012               	return		;funcret
  2756  00143C                     __end_of___awmod:
  2757                           	opt callstack 0
  2758                           
  2759 ;; *************** function _lcd_puts *****************
  2760 ;; Defined at:
  2761 ;;		line 84 in file "display.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  s               2    1[COMRAM] PTR const unsigned char 
  2764 ;;		 -> STR_2(15), STR_1(16), 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2776 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;Total ram usage:        2 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; Hardware stack levels required when called:    1
  2783 ;; This function calls:
  2784 ;;		_lcd_write
  2785 ;; This function is called by:
  2786 ;;		_clockSetup
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text25
  2791  0016D8                     __ptext25:
  2792                           	opt callstack 0
  2793  0016D8                     _lcd_puts:
  2794                           	opt callstack 28
  2795                           
  2796                           ;display.c: 84: void lcd_puts(const char * s);display.c: 85: {;display.c: 86:  LCD_RS_fl
      +                          ag = 1;
  2797                           
  2798                           ;incstack = 0
  2799  0016D8  0E00               	movlw	0
  2800  0016DA  6E17               	movwf	_LCD_RS_flag+1,c	;volatile
  2801  0016DC  0E01               	movlw	1
  2802  0016DE  6E16               	movwf	_LCD_RS_flag,c	;volatile
  2803                           
  2804                           ;display.c: 87:  while(*s){
  2805  0016E0  D00A               	goto	l1963
  2806  0016E2                     l1959:
  2807                           
  2808                           ;display.c: 88:   lcd_write(*s++);
  2809  0016E2  C002  FFF6         	movff	lcd_puts@s,tblptrl
  2810  0016E6  C003  FFF7         	movff	lcd_puts@s+1,tblptrh
  2811  0016EA                     	if	0	;tblptru may be non-zero
  2812  0016EA                     	endif
  2813  0016EA                     	if	0	;tblptru may be non-zero
  2814  0016EA                     	endif
  2815  0016EA  0008               	tblrd		*
  2816  0016EC  50F5               	movf	tablat,w,c
  2817  0016EE  EC79  F00A         	call	_lcd_write
  2818  0016F2  4A02               	infsnz	lcd_puts@s,f,c
  2819  0016F4  2A03               	incf	lcd_puts@s+1,f,c
  2820  0016F6                     l1963:
  2821                           
  2822                           ;display.c: 87:  while(*s){
  2823  0016F6  C002  FFF6         	movff	lcd_puts@s,tblptrl
  2824  0016FA  C003  FFF7         	movff	lcd_puts@s+1,tblptrh
  2825  0016FE                     	if	0	;tblptru may be non-zero
  2826  0016FE                     	endif
  2827  0016FE                     	if	0	;tblptru may be non-zero
  2828  0016FE                     	endif
  2829  0016FE  0008               	tblrd		*
  2830  001700  50F5               	movf	tablat,w,c
  2831  001702  0900               	iorlw	0
  2832  001704  B4D8               	btfsc	status,2,c
  2833  001706  0012               	return	
  2834  001708  D7EC               	goto	l1959
  2835  00170A                     __end_of_lcd_puts:
  2836                           	opt callstack 0
  2837                           
  2838 ;; *************** function _lcd_clear *****************
  2839 ;; Defined at:
  2840 ;;		line 63 in file "display.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;		None
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;Total ram usage:        0 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    2
  2861 ;; This function calls:
  2862 ;;		_DelayMs
  2863 ;;		_lcd_write
  2864 ;; This function is called by:
  2865 ;;		_display
  2866 ;;		_clockSetup
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text26
  2871  001808                     __ptext26:
  2872                           	opt callstack 0
  2873  001808                     _lcd_clear:
  2874                           	opt callstack 27
  2875                           
  2876                           ;display.c: 65:  LCD_RS_flag = 0;
  2877                           
  2878                           ;incstack = 0
  2879  001808  0E00               	movlw	0
  2880  00180A  6E17               	movwf	_LCD_RS_flag+1,c	;volatile
  2881  00180C  0E00               	movlw	0
  2882  00180E  6E16               	movwf	_LCD_RS_flag,c	;volatile
  2883                           
  2884                           ;display.c: 66:  lcd_write(0x1);
  2885  001810  0E01               	movlw	1
  2886  001812  EC79  F00A         	call	_lcd_write
  2887                           
  2888                           ;display.c: 67:  DelayMs(2);
  2889  001816  0E00               	movlw	0
  2890  001818  6E06               	movwf	DelayMs@x+1,c
  2891  00181A  0E02               	movlw	2
  2892  00181C  6E05               	movwf	DelayMs@x,c
  2893  00181E  ECDF  F00B         	call	_DelayMs	;wreg free
  2894  001822  0012               	return		;funcret
  2895  001824                     __end_of_lcd_clear:
  2896                           	opt callstack 0
  2897                           
  2898 ;; *************** function _lcd_write *****************
  2899 ;; Defined at:
  2900 ;;		line 46 in file "display.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  c               1    wreg     unsigned char 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  c               1    0[COMRAM] unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;Total ram usage:        1 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_lcd_clear
  2924 ;;		_lcd_putchar
  2925 ;;		_lcd_puts
  2926 ;;		_lcd_goto
  2927 ;;		_lcd_init
  2928 ;;		_lcd_puthex
  2929 ;;		_lcd_init33
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text27
  2934  0014F2                     __ptext27:
  2935                           	opt callstack 0
  2936  0014F2                     _lcd_write:
  2937                           	opt callstack 27
  2938                           
  2939                           ;incstack = 0
  2940                           ;lcd_write@c stored from wreg
  2941  0014F2  6E01               	movwf	lcd_write@c,c
  2942                           
  2943                           ;display.c: 46: void lcd_write(unsigned char c);display.c: 47: {;display.c: 48:         
      +                          LATC = (c >> 4);
  2944  0014F4  3801               	swapf	lcd_write@c,w,c
  2945  0014F6  0B0F               	andlw	15
  2946  0014F8  6E8B               	movwf	3979,c	;volatile
  2947                           
  2948                           ;display.c: 49:         {if(LCD_RS_flag == 1) LATC |= 0x40; else LATC &= 0x0F;};
  2949  0014FA  0416               	decf	_LCD_RS_flag,w,c	;volatile
  2950  0014FC  1017               	iorwf	_LCD_RS_flag+1,w,c	;volatile
  2951  0014FE  A4D8               	btfss	status,2,c
  2952  001500  D002               	goto	l1685
  2953  001502  8C8B               	bsf	3979,6,c	;volatile
  2954  001504  D002               	goto	l1687
  2955  001506                     l1685:
  2956  001506  0E0F               	movlw	15
  2957  001508  168B               	andwf	3979,f,c	;volatile
  2958  00150A                     l1687:
  2959                           
  2960                           ;display.c: 50:         { {_delay(2);}; LATC |= 0x10; {_delay(2);}; LATC = LATC & 0x0F; 
      +                          {_delay(2);}; };
  2961  00150A  D000               	nop2		;2 cycle nop
  2962  00150C  888B               	bsf	3979,4,c	;volatile
  2963  00150E  D000               	nop2		;2 cycle nop
  2964  001510  508B               	movf	3979,w,c	;volatile
  2965  001512  0B0F               	andlw	15
  2966  001514  6E8B               	movwf	3979,c	;volatile
  2967  001516  D000               	nop2		;2 cycle nop
  2968                           
  2969                           ;display.c: 51:         {_delay(2);};
  2970  001518  D000               	nop2		;2 cycle nop
  2971                           
  2972                           ;display.c: 53:         LATC = c & 0xF;
  2973  00151A  5001               	movf	lcd_write@c,w,c
  2974  00151C  0B0F               	andlw	15
  2975  00151E  6E8B               	movwf	3979,c	;volatile
  2976                           
  2977                           ;display.c: 54:         {if(LCD_RS_flag == 1) LATC |= 0x40; else LATC &= 0x0F;};
  2978  001520  0416               	decf	_LCD_RS_flag,w,c	;volatile
  2979  001522  1017               	iorwf	_LCD_RS_flag+1,w,c	;volatile
  2980  001524  A4D8               	btfss	status,2,c
  2981  001526  D002               	goto	l1705
  2982  001528  8C8B               	bsf	3979,6,c	;volatile
  2983  00152A  D002               	goto	l1707
  2984  00152C                     l1705:
  2985  00152C  0E0F               	movlw	15
  2986  00152E  168B               	andwf	3979,f,c	;volatile
  2987  001530                     l1707:
  2988                           
  2989                           ;display.c: 55:         { {_delay(2);}; LATC |= 0x10; {_delay(2);}; LATC = LATC & 0x0F; 
      +                          {_delay(2);}; };
  2990  001530  D000               	nop2		;2 cycle nop
  2991  001532  888B               	bsf	3979,4,c	;volatile
  2992  001534  D000               	nop2		;2 cycle nop
  2993  001536  508B               	movf	3979,w,c	;volatile
  2994  001538  0B0F               	andlw	15
  2995  00153A  6E8B               	movwf	3979,c	;volatile
  2996  00153C  D000               	nop2		;2 cycle nop
  2997                           
  2998                           ;display.c: 57:         {_delay(50);};
  2999  00153E  0E10               	movlw	16
  3000  001540                     u727:
  3001  001540  2EE8               	decfsz	wreg,f,c
  3002  001542  D7FE               	bra	u727
  3003  001544  D000               	nop2	
  3004  001546  0012               	return		;funcret
  3005  001548                     __end_of_lcd_write:
  3006                           	opt callstack 0
  3007                           
  3008 ;; *************** function _DelayMs *****************
  3009 ;; Defined at:
  3010 ;;		line 24 in file "simdelay.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  x               2    4[COMRAM] unsigned int 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  i               2    6[COMRAM] unsigned int 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      void 
  3017 ;; Registers used:
  3018 ;;		wreg, status,2, status,0, cstack
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3024 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3027 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;Total ram usage:        4 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    1
  3031 ;; This function calls:
  3032 ;;		_Delay100Us
  3033 ;; This function is called by:
  3034 ;;		_pressedButton
  3035 ;;		_readAndSet
  3036 ;;		_clockSetup
  3037 ;;		_lcd_clear
  3038 ;;		_lcd_init
  3039 ;;		_lcd_init33
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           	psect	text28
  3044  0017BE                     __ptext28:
  3045                           	opt callstack 0
  3046  0017BE                     _DelayMs:
  3047                           	opt callstack 28
  3048                           
  3049                           ;simdelay.c: 25:  unsigned int i;;simdelay.c: 26:  for (i=0; i<x; i++){Delay100Us(10);}
  3050                           
  3051                           ;incstack = 0
  3052  0017BE  0E00               	movlw	0
  3053  0017C0  6E08               	movwf	DelayMs@i+1,c
  3054  0017C2  0E00               	movlw	0
  3055  0017C4  6E07               	movwf	DelayMs@i,c
  3056  0017C6  D008               	goto	l1679
  3057  0017C8                     l1675:
  3058  0017C8  0E00               	movlw	0
  3059  0017CA  6E02               	movwf	Delay100Us@x+1,c
  3060  0017CC  0E0A               	movlw	10
  3061  0017CE  6E01               	movwf	Delay100Us@x,c
  3062  0017D0  EC13  F00B         	call	_Delay100Us	;wreg free
  3063  0017D4  4A07               	infsnz	DelayMs@i,f,c
  3064  0017D6  2A08               	incf	DelayMs@i+1,f,c
  3065  0017D8                     l1679:
  3066  0017D8  5005               	movf	DelayMs@x,w,c
  3067  0017DA  5C07               	subwf	DelayMs@i,w,c
  3068  0017DC  5006               	movf	DelayMs@x+1,w,c
  3069  0017DE  5808               	subwfb	DelayMs@i+1,w,c
  3070  0017E0  B0D8               	btfsc	status,0,c
  3071  0017E2  0012               	return	
  3072  0017E4  D7F1               	goto	l1675
  3073  0017E6                     __end_of_DelayMs:
  3074                           	opt callstack 0
  3075                           
  3076 ;; *************** function _Delay100Us *****************
  3077 ;; Defined at:
  3078 ;;		line 16 in file "simdelay.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  x               2    0[COMRAM] unsigned int 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  i               2    2[COMRAM] unsigned int 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		wreg, status,2, status,0
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3093 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3095 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3096 ;;Total ram usage:        4 bytes
  3097 ;; Hardware stack levels used:    1
  3098 ;; This function calls:
  3099 ;;		Nothing
  3100 ;; This function is called by:
  3101 ;;		_DelayMs
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text29
  3106  001626                     __ptext29:
  3107                           	opt callstack 0
  3108  001626                     _Delay100Us:
  3109                           	opt callstack 28
  3110                           
  3111                           ;simdelay.c: 17:  unsigned int i;;simdelay.c: 19:     for (i=0; i<x; i++){_delay(200);}
  3112                           
  3113                           ;incstack = 0
  3114  001626  0E00               	movlw	0
  3115  001628  6E04               	movwf	Delay100Us@i+1,c
  3116  00162A  0E00               	movlw	0
  3117  00162C  6E03               	movwf	Delay100Us@i,c
  3118  00162E  D006               	goto	l166
  3119  001630                     l1663:
  3120  001630  0E42               	movlw	66
  3121  001632                     u737:
  3122  001632  2EE8               	decfsz	wreg,f,c
  3123  001634  D7FE               	bra	u737
  3124  001636  D000               	nop2	
  3125  001638  4A03               	infsnz	Delay100Us@i,f,c
  3126  00163A  2A04               	incf	Delay100Us@i+1,f,c
  3127  00163C                     l166:
  3128  00163C  5001               	movf	Delay100Us@x,w,c
  3129  00163E  5C03               	subwf	Delay100Us@i,w,c
  3130  001640  5002               	movf	Delay100Us@x+1,w,c
  3131  001642  5804               	subwfb	Delay100Us@i+1,w,c
  3132  001644  A0D8               	btfss	status,0,c
  3133  001646  D7F4               	goto	l1663
  3134                           
  3135                           ;simdelay.c: 20:     for (i=0; i<x; i++){_delay(200);}
  3136  001648  0E00               	movlw	0
  3137  00164A  6E04               	movwf	Delay100Us@i+1,c
  3138  00164C  0E00               	movlw	0
  3139  00164E  6E03               	movwf	Delay100Us@i,c
  3140  001650  D006               	goto	l169
  3141  001652                     l1669:
  3142  001652  0E42               	movlw	66
  3143  001654                     u747:
  3144  001654  2EE8               	decfsz	wreg,f,c
  3145  001656  D7FE               	bra	u747
  3146  001658  D000               	nop2	
  3147  00165A  4A03               	infsnz	Delay100Us@i,f,c
  3148  00165C  2A04               	incf	Delay100Us@i+1,f,c
  3149  00165E                     l169:
  3150  00165E  5001               	movf	Delay100Us@x,w,c
  3151  001660  5C03               	subwf	Delay100Us@i,w,c
  3152  001662  5002               	movf	Delay100Us@x+1,w,c
  3153  001664  5804               	subwfb	Delay100Us@i+1,w,c
  3154  001666  B0D8               	btfsc	status,0,c
  3155  001668  0012               	return	
  3156  00166A  D7F3               	goto	l1669
  3157  00166C                     __end_of_Delay100Us:
  3158                           	opt callstack 0
  3159                           
  3160                           	psect	rparam
  3161  0000                     tosu	equ	0xFFF
  3162                           tosh	equ	0xFFE
  3163                           tosl	equ	0xFFD
  3164                           stkptr	equ	0xFFC
  3165                           pclatu	equ	0xFFB
  3166                           pclath	equ	0xFFA
  3167                           pcl	equ	0xFF9
  3168                           tblptru	equ	0xFF8
  3169                           tblptrh	equ	0xFF7
  3170                           tblptrl	equ	0xFF6
  3171                           tablat	equ	0xFF5
  3172                           prodh	equ	0xFF4
  3173                           prodl	equ	0xFF3
  3174                           indf0	equ	0xFEF
  3175                           postinc0	equ	0xFEE
  3176                           postdec0	equ	0xFED
  3177                           preinc0	equ	0xFEC
  3178                           plusw0	equ	0xFEB
  3179                           fsr0h	equ	0xFEA
  3180                           fsr0l	equ	0xFE9
  3181                           wreg	equ	0xFE8
  3182                           indf1	equ	0xFE7
  3183                           postinc1	equ	0xFE6
  3184                           postdec1	equ	0xFE5
  3185                           preinc1	equ	0xFE4
  3186                           plusw1	equ	0xFE3
  3187                           fsr1h	equ	0xFE2
  3188                           fsr1l	equ	0xFE1
  3189                           bsr	equ	0xFE0
  3190                           indf2	equ	0xFDF
  3191                           postinc2	equ	0xFDE
  3192                           postdec2	equ	0xFDD
  3193                           preinc2	equ	0xFDC
  3194                           plusw2	equ	0xFDB
  3195                           fsr2h	equ	0xFDA
  3196                           fsr2l	equ	0xFD9
  3197                           status	equ	0xFD8


Data Sizes:
    Strings     31
    Constant    0
    Data        2
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     21      35
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    I2C_Read_Block@p_dta	PTR unsigned char  size(2) Largest target is 5
		 -> RTC(COMRAM[5]), 

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[15]), STR_1(CODE[16]), 

    readAndSet@valueReg	PTR unsigned char  size(2) Largest target is 1
		 -> hoursD(COMRAM[1]), hoursT(COMRAM[1]), minutesD(COMRAM[1]), minutesT(COMRAM[1]), 
		 -> secondsD(COMRAM[1]), secondsT(COMRAM[1]), 

    setTime@ptr	PTR unsigned char  size(2) Largest target is 5
		 -> RTC.controlReg(COMRAM[1]), RTC(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_clockSetup
    _lcd_init->_DelayMs
    _getTime->_I2C_Read_Block
    _I2C_Read_Block->_I2C_Read_B
    _I2C_Read_B->_I2C_Wait
    _I2C_NoAck_Out->_I2C_Wait
    _I2C_Ack_Out->_I2C_Wait
    _printBinary->_lcd_putchar
    _clockStop->_pressedButton
    _clockSetup->_readAndSet
    _setTime->_I2C_Set_Address
    _I2C_Stop->_I2C_Wait
    _I2C_Set_Address->_I2C_Write_B
    _I2C_Write_B->_I2C_Wait
    _I2C_Start->_I2C_Wait
    _readAndSet->_pressedButton
    _pressedButton->_DelayMs
    _lcd_putchar->_lcd_write
    _lcd_goto->_lcd_write
    _lcd_puts->_lcd_write
    _lcd_clear->_DelayMs
    _DelayMs->_Delay100Us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   13746
                         _clockSetup
                          _clockStop
                            _display
                            _getTime
                               _init
                      _pressedButton
                            _setTime
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    1094
                        _displayInit
                            _rtcInit
 ---------------------------------------------------------------------------------
 (2) _rtcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _displayInit                                          0     0      0    1094
                           _lcd_init
 ---------------------------------------------------------------------------------
 (3) _lcd_init                                             0     0      0    1094
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _getTime                                              0     0      0     678
                     _I2C_Read_Block
                    _I2C_Set_Address
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Block                                       8     6      2     316
                                              4 COMRAM     8     6      2
                         _I2C_Read_B
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _I2C_Read_B                                           3     3      0      90
                                              1 COMRAM     3     3      0
                        _I2C_Ack_Out
                      _I2C_NoAck_Out
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_NoAck_Out                                        0     0      0      15
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Ack_Out                                          0     0      0      15
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _display                                              1     1      0    1429
                                              8 COMRAM     1     1      0
                          _lcd_clear
                           _lcd_goto
                        _lcd_putchar
                        _printBinary
 ---------------------------------------------------------------------------------
 (2) _printBinary                                          4     4      0     180
                                              2 COMRAM     4     4      0
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (1) _clockStop                                            0     0      0    1512
                      _pressedButton
                            _setTime
 ---------------------------------------------------------------------------------
 (1) _clockSetup                                           4     4      0    7521
                                             17 COMRAM     4     4      0
                            _DelayMs
                          _lcd_clear
                           _lcd_goto
                           _lcd_puts
                         _readAndSet
                            _setTime
 ---------------------------------------------------------------------------------
 (1) _setTime                                              3     3      0     462
                                              6 COMRAM     3     3      0
                    _I2C_Set_Address
                           _I2C_Stop
                        _I2C_Write_B
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0      15
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Set_Address                                      2     1      1     332
                                              4 COMRAM     2     1      1
                          _I2C_Start
                        _I2C_Write_B
 ---------------------------------------------------------------------------------
 (2) _I2C_Write_B                                          3     3      0      45
                                              1 COMRAM     3     3      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0      15
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Wait                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _readAndSet                                           7     1      6    4408
                                             10 COMRAM     7     1      6
                            _DelayMs
                            ___awmod
                           _lcd_goto
                        _lcd_putchar
                      _pressedButton
 ---------------------------------------------------------------------------------
 (1) _pressedButton                                        2     0      2    1050
                                              8 COMRAM     2     0      2
                            _DelayMs
 ---------------------------------------------------------------------------------
 (3) _lcd_putchar                                          1     1      0      66
                                              1 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             1     1      0      66
                                              1 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             2     0      2     241
                                              1 COMRAM     2     0      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0    1094
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _lcd_write                                            1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DelayMs                                              4     2      2    1050
                                              4 COMRAM     4     2      2
                         _Delay100Us
 ---------------------------------------------------------------------------------
 (3) _Delay100Us                                           4     2      2     168
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clockSetup
     _DelayMs
       _Delay100Us
     _lcd_clear
       _DelayMs
         _Delay100Us
       _lcd_write
     _lcd_goto
       _lcd_write
     _lcd_puts
       _lcd_write
     _readAndSet
       _DelayMs
         _Delay100Us
       ___awmod
       _lcd_goto
         _lcd_write
       _lcd_putchar
         _lcd_write
       _pressedButton
         _DelayMs
           _Delay100Us
     _setTime
       _I2C_Set_Address
         _I2C_Start
           _I2C_Wait
         _I2C_Write_B
           _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write_B
         _I2C_Wait
   _clockStop
     _pressedButton
       _DelayMs
         _Delay100Us
     _setTime
       _I2C_Set_Address
         _I2C_Start
           _I2C_Wait
         _I2C_Write_B
           _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write_B
         _I2C_Wait
   _display
     _lcd_clear
       _DelayMs
         _Delay100Us
       _lcd_write
     _lcd_goto
       _lcd_write
     _lcd_putchar
       _lcd_write
     _printBinary
       _lcd_putchar
         _lcd_write
   _getTime
     _I2C_Read_Block
       _I2C_Read_B
         _I2C_Ack_Out
           _I2C_Wait
         _I2C_NoAck_Out
           _I2C_Wait
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
     _I2C_Set_Address
       _I2C_Start
         _I2C_Wait
       _I2C_Write_B
         _I2C_Wait
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
   _init
     _displayInit
       _lcd_init
         _DelayMs
           _Delay100Us
         _lcd_write
     _rtcInit
   _pressedButton
     _DelayMs
       _Delay100Us
   _setTime
     _I2C_Set_Address
       _I2C_Start
         _I2C_Wait
       _I2C_Write_B
         _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _I2C_Write_B
       _I2C_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     15      23       1       36.8%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      12        0.0%
DATA                 0      0      23       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Jun 20 12:26:14 2019

            printBinary@i 0006              ?_displayInit 0001      __size_of_I2C_Ack_Out 0010  
      __size_of_I2C_Start 001A              ?_lcd_putchar 0001                        u30 15EE  
                      u48 15F0       __size_of_I2C_Read_B 004A                       l103 145A  
                     l106 1496                       l114 1356                       l107 1478  
                     l166 163C                       l246 18C2                       l169 165E  
                     l991 15E4                       u150 15B8                       u156 15BA  
                     u520 1406                       u550 14C6                       u650 1156  
                     u707 12F8                       u717 1312                       u727 1540  
                     u737 1632                       u747 1654                       u697 12E2  
                     _RTC 0019              ___awmod@sign 0006               lcd_goto@pos 0002  
                     wreg 000FE8                _Delay100Us 1626                      l2011 1032  
                    l1211 15A6                      l2021 10B2                      l2013 1050  
                    l2005 1254                      l2023 10D0                      l2031 1142  
                    l1231 15DA                      l2025 10EE                      l2017 1076  
                    l2033 1146                      l2041 1180                      l2019 1094  
                    l2029 110C                      l1229 15D6                      l2071 1562  
                    l2073 1568                      l2075 156E                      l2067 1558  
                    l2079 1572                      l1705 152C                      l1801 1800  
                    l1707 1530                      l1663 1630                      l1675 17C8  
                    l1907 1686                      l1923 16AC                      l1669 1652  
                    l1685 1506                      l1861 141A                      l1853 13FA  
                    l1845 13E0                      l1679 17D8                      l1687 150A  
                    l1855 1402                      l1943 1364                      l1951 13B0  
                    l1927 16BE      __size_of_I2C_Write_B 0048                      l1865 1424  
                    l1849 13EC                      l1963 16F6                      l1883 14A4  
                    l1869 1432                      l1893 14E4                      l1959 16E2  
                    l1887 14CE                      STR_1 1001                      STR_2 1011  
                    _LATB 000F8A                      _LATC 000F8B                      _LATD 000F8C  
           __CFG_FCMEN$ON 000000                      _main 1548                      _init 1768  
                    _mode 0018                      fsr2h 000FDA                      indf2 000FDF  
                    fsr2l 000FD9          __end_of_I2C_Wait 18C8          __end_of_I2C_Stop 183E  
                    start 0000           __end_of_DelayMs 17E6              ___param_bank 000000  
  __size_of_I2C_NoAck_Out 0010           ??_pressedButton 000B                     ?_main 0001  
                   ?_init 0001           __end_of___awmod 143C                     _TRISB 000F93  
                   _TRISC 000F94                     _TRISD 000F95           __end_of_getTime 173A  
         __end_of_display 129C        __CFG_MCLRE$EXTMCLR 000000              lcd_putchar@s 0002  
       __end_of_I2C_Start 1858           __end_of_setTime 16A6           __end_of_rtcInit 17BE  
                   tablat 000FF5                     status 000FD8           __initialization 173A  
        ?_I2C_Set_Address 0005              __end_of_main 1594              __end_of_init 1794  
                  ??_main 0016                    ??_init 0009             __activetblptr 000002  
             ?_Delay100Us 0001              ??_I2C_Read_B 0002                    _ANSELB 000F39  
                  _ANSELD 000F3B             _I2C_NoAck_Out 1890            __CFG_WDTEN$OFF 000000  
               ??_DelayMs 0007                    _OSCCON 000FD3         printBinary@number 0003  
        __end_of_lcd_init 1350          __end_of_lcd_goto 186C          __end_of_lcd_puts 170A  
               ??___awmod 0005   __size_of_I2C_Read_Block 0056                    _hoursD 0022  
                  clear_0 1758                    _hoursT 0023           ___awmod@divisor 0003  
      __end_of_I2C_Read_B 15DE           ___awmod@counter 0005      __size_of_displayInit 000E  
               ??_getTime 000D      __size_of_lcd_putchar 0012                 ??_display 0009  
            __pdataCOMRAM 0022                 ?_I2C_Wait 0001                 ?_I2C_Stop 0001  
            __mediumconst 0000                 ??_setTime 0007                    tblptrh 000FF7  
                  tblptrl 000FF6                 ??_rtcInit 0001                    tblptru 000FF8  
            ?_printBinary 0001            ?_I2C_NoAck_Out 0001                __accesstop 0060  
 __end_of__initialization 175E             ___rparam_used 000001       I2C_Read_Block@p_dta 0005  
          __pcstackCOMRAM 0001       __size_of_Delay100Us 0046        __size_of_clockStop 0012  
              ??_I2C_Wait 0001                ??_I2C_Stop 0002        __size_of_lcd_clear 001C  
      __size_of_lcd_write 0056             ??_I2C_Ack_Out 0002                _clockSetup 1022  
           ??_I2C_Write_B 0002           ??_I2C_NoAck_Out 0002                 ?_lcd_init 0001  
               ?_lcd_goto 0001                 ?_lcd_puts 0002                   _DelayMs 17BE  
               _I2C_Start 183E         __end_of_clockStop 187E                   __Hparam 0000  
                 __Lparam 0000                _readAndSet 1350         __end_of_lcd_clear 1824  
          _I2C_Read_Block 149C                   ___awmod 13CC         __end_of_lcd_write 1548  
            __psmallconst 1000                   __pcinit 173A       __end_of_I2C_Ack_Out 18B0  
                 __ramtop 1000                   __ptext0 1548                   __ptext1 1768  
                 __ptext2 1794                   __ptext3 18B0                   _getTime 170A  
                 __ptext4 129C                   __ptext5 170A                   __ptext6 149C  
                 __ptext7 1594                   __ptext8 1890                   __ptext9 18A0  
                 _display 11B6     __end_of_pressedButton 149C          ___awmod@dividend 0001  
                 _setTime 166C                   _rtcInit 1794              ??_Delay100Us 0003  
              ??_lcd_init 0009                ??_lcd_goto 0002                ??_lcd_puts 0004  
    __size_of_printBinary 0032      end_of_initialization 175E       __end_of_I2C_Write_B 1626  
           __Lmediumconst 0000                ?_I2C_Start 0001    __end_of_I2C_Read_Block 14F2  
         _printBinary$509 0004                   postinc0 000FEE        __end_of_Delay100Us 166C  
             ?_clockSetup 0001                 _PORTBbits 000F81                 _PORTDbits 000F83  
__size_of_I2C_Set_Address 0022          __CFG_FOSC$INTIO7 000000                 _TRISDbits 000F95  
               _TRISEbits 000F96         __size_of_I2C_Wait 000A         __size_of_I2C_Stop 001A  
              display@tmp 0009                lcd_write@c 0001           ?_I2C_Read_Block 0005  
             ?_readAndSet 000B               _I2C_Ack_Out 18A0             ??_displayInit 0009  
           ??_lcd_putchar 0002             __pidataCOMRAM 18C8       start_initialization 173A  
             _I2C_Write_B 15DE       I2C_Set_Address@func 0005       __size_of_clockSetup 0194  
             ??_I2C_Start 0002        readAndSet@valueReg 000D            I2C_Write_B@dta 0003  
          I2C_Write_B@cnt 0004       __end_of_displayInit 18BE       __end_of_lcd_putchar 1890  
             __pbssCOMRAM 0016       __size_of_readAndSet 007C         ??_I2C_Set_Address 0006  
                ?_DelayMs 0005         __size_of_lcd_init 00B4         __size_of_lcd_goto 0014  
       __size_of_lcd_puts 0032             I2C_Read_B@ack 0002             I2C_Read_B@dta 0004  
           I2C_Read_B@cnt 0003                  ?___awmod 0001             readAndSet@max 000F  
               _clockStop 186C             readAndSet@pos 000B                 _lcd_clear 1808  
             I2C_Wait@cnt 0001                  ?_getTime 0001                 _lcd_write 14F2  
                ?_display 0001                setTime@ptr 0007               __smallconst 1000  
                _I2C_Wait 18BE                  _I2C_Stop 1824                  ?_setTime 0001  
                ?_rtcInit 0001           I2C_Read_Block@i 000B           I2C_Read_Block@j 000C  
             Delay100Us@i 0003               Delay100Us@x 0001     __end_of_I2C_NoAck_Out 18A0  
                _LATDbits 000F8C                  _LATEbits 000F8D                  DelayMs@i 0007  
                DelayMs@x 0005                  _RCONbits 000FD0               _LCD_RS_flag 0016  
              ?_clockStop 0001               _displayInit 18B0               _lcd_putchar 187E  
              ?_lcd_clear 0001              ??_clockSetup 0012                ?_lcd_write 0001  
               lcd_puts@s 0002             ??_printBinary 0003                _I2C_Read_B 1594  
      I2C_Set_Address@adr 0006          ??_I2C_Read_Block 0007          __size_of_DelayMs 0028  
      __end_of_clockSetup 11B6    __size_of_pressedButton 0060                  __Hrparam 0000  
            ??_readAndSet 0011              ?_I2C_Ack_Out 0001                  __Lrparam 0000  
        __size_of___awmod 0070          __size_of_getTime 0030          __size_of_display 00E6  
            ?_I2C_Write_B 0001          __size_of_setTime 003A                  __ptext10 11B6  
                __ptext11 16A6                  __ptext20 1350                  __ptext12 186C  
                __ptext21 143C                  __ptext13 1022                  __ptext22 187E  
                __ptext14 166C                  __ptext23 1858                  __ptext15 1824  
                __ptext24 13CC                  __ptext16 17E6                  __ptext25 16D8  
                __ptext17 15DE                  __ptext26 1808                  __ptext18 183E  
                __ptext27 14F2                  __ptext19 18BE                  __ptext28 17BE  
                __ptext29 1626          __size_of_rtcInit 002A                  _lcd_init 129C  
                _lcd_goto 1858        __end_of_readAndSet 13CC                  _lcd_puts 16D8  
     __end_of_printBinary 16D8             __size_of_main 004C             __size_of_init 002C  
           clockSetup@pos 0014                  _minutesD 0020                  _secondsD 001E  
                _minutesT 0021                  _secondsT 001F               ??_clockStop 000B  
             ??_lcd_clear 0009           _I2C_Set_Address 17E6               ??_lcd_write 0001  
           _pressedButton 143C                _INTCONbits 000FF2               ?_I2C_Read_B 0001  
                setTime@i 0009            ?_pressedButton 0009               _printBinary 16A6  
 __end_of_I2C_Set_Address 1808  
